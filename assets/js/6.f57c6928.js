(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{339:function(v,_,e){"use strict";e.r(_);var t=e(33),a=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"面试经历"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#面试经历"}},[v._v("#")]),v._v(" 面试经历")]),v._v(" "),e("h2",{attrs:{id:"微信小程序登陆流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#微信小程序登陆流程"}},[v._v("#")]),v._v(" 微信小程序登陆流程")]),v._v(" "),e("p",[v._v("首先通过"),e("code",[v._v("wx.login")]),v._v("获取"),e("code",[v._v("code")]),v._v("，之后将"),e("code",[v._v("code")]),v._v("通过"),e("code",[v._v("wx.request")]),v._v("发送到第三方服务器，第三方服务器将"),e("code",[v._v("appid、appsecret、code")]),v._v("发送给微信官方api请求到"),e("code",[v._v("session_key, openid")]),v._v("，之后服务器可以通过"),e("code",[v._v("token")]),v._v("之类自定义登录态的将其与"),e("code",[v._v("session_key, openid")]),v._v("关联，且将"),e("code",[v._v("session_key, openid")]),v._v("保存到服务端，然后把自定义登录态返回给小程序，小程序将其保存起来，之后进行业务请求的时候携带用于查询"),e("code",[v._v("session_key, openid")]),v._v("是否符合条件。")]),v._v(" "),e("h2",{attrs:{id:"微信小程序授权的流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#微信小程序授权的流程"}},[v._v("#")]),v._v(" 微信小程序授权的流程")]),v._v(" "),e("p",[v._v("获取用户信息的api "),e("code",[v._v("wx.getUserInfo")]),v._v("，需要在用户已授权的情况下才会进入success回调，否则会进入fail回调，用户授权需要增加一个"),e("code",[v._v("<button open-type='getUserInfo' bindgetuserinfo='yourMethod'>授权用户信息</button>")]),v._v("按钮，用户点击确认授权后就会获得信息，与"),e("code",[v._v("wx.getUserInfo")]),v._v("回调返回的数据一致")]),v._v(" "),e("h2",{attrs:{id:"微信小程序渲染机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#微信小程序渲染机制"}},[v._v("#")]),v._v(" 微信小程序渲染机制")]),v._v(" "),e("p",[v._v("小程序视图层目前使用WebView作为渲染载体，逻辑层是由JavaScriptCore作为运行环境。两个都是独立的模块，并不具备数据之间共享的通道，它们之间的通信是通过两边的evaluateJavaScript所实现。用户传输的数据，会先被转化为字符串形式传递，同时把传递后的数据内容转化为JS脚本，最后运行JS脚本的形式传递到两边独立环境。")]),v._v(" "),e("h2",{attrs:{id:"微信小程序生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#微信小程序生命周期"}},[v._v("#")]),v._v(" 微信小程序生命周期")]),v._v(" "),e("ul",[e("li",[v._v("App内\n"),e("code",[v._v("onLaunch")]),v._v(","),e("code",[v._v("onShow")]),v._v(","),e("code",[v._v("onHide")]),v._v(","),e("code",[v._v("onError")])]),v._v(" "),e("li",[v._v("Page内\n"),e("code",[v._v("onLoad")]),v._v(","),e("code",[v._v("onReady")]),v._v(","),e("code",[v._v("onShow")]),v._v(","),e("code",[v._v("onHide")]),v._v(","),e("code",[v._v("onUnload")])])]),v._v(" "),e("p",[e("strong",[v._v("如果同时有app和page的生命周期，会先触发app的，然后触发page内的")]),v._v("\n后退之后不会触发onLoad，只会触发onShow")]),v._v(" "),e("h2",{attrs:{id:"cookie-localstorage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cookie-localstorage"}},[v._v("#")]),v._v(" cookie localStorage")]),v._v(" "),e("ul",[e("li",[v._v("cookie\n"),e("code",[v._v("domain")]),v._v("：cookie可以通过设置domain让两个二级域名相同的跨域请求中，cookie可以互相使用，eg: t1.test.com 和 t2.test.com，在第一个页面中生成cookie 如果不设置默认domain是当前域名 t1.test.com，此时 t2.test.com 无法使用此cookie，如果设置 domain=.test.com 此时两个页面都可以使用此cookie "),e("br"),v._v(" "),e("code",[v._v("path")]),v._v("：默认是根目录 / ，即当前域名下页面都可视cookie，如果设置了path，则只有匹配的path才可视")]),v._v(" "),e("li",[v._v("localStorage\nlocalStorage不支持跨域")])]),v._v(" "),e("h2",{attrs:{id:"常见的请求header字段，状态码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常见的请求header字段，状态码"}},[v._v("#")]),v._v(" 常见的请求header字段，状态码")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("Cache-Control 控制缓存行为")])]),v._v(" "),e("li",[e("p",[v._v("Connection 浏览器想优先使用的连接类型")])]),v._v(" "),e("li",[e("p",[v._v("Date 创建报文时间")])]),v._v(" "),e("li",[e("p",[v._v("Transfer-Encoding 传输编码方式")])]),v._v(" "),e("li",[e("p",[v._v("Accept 能正确接收的媒体类型（请求头）")])]),v._v(" "),e("li",[e("p",[v._v("Accept-Encoding 能正确接收的编码格式列表（请求头）")])]),v._v(" "),e("li",[e("p",[v._v("Accept-Language 能正确接收的语言列表（请求头）")])]),v._v(" "),e("li",[e("p",[v._v("Host 服务器域名（请求头）")])]),v._v(" "),e("li",[e("p",[v._v("If-Modified-Since 判断Last-modified是否改变（请求头）")])]),v._v(" "),e("li",[e("p",[v._v("If-None-Match 判断ETag是否改变（请求头）")])]),v._v(" "),e("li",[e("p",[v._v("User-Agent 客户端信息（请求头）")])]),v._v(" "),e("li",[e("p",[v._v("Referer 表示浏览器所访问的前一个页面（请求头）")])]),v._v(" "),e("li",[e("p",[v._v("Server 服务器名字（响应头）")])]),v._v(" "),e("li",[e("p",[v._v("ETag 资源标识（响应头）")])]),v._v(" "),e("li",[e("p",[v._v("200 表示客户端发来的请求在服务端被正确处理")])]),v._v(" "),e("li",[e("p",[v._v("204 No Content 表示响应报文不含实体的主体部分")])]),v._v(" "),e("li",[e("p",[v._v("301 永久性重定向")])]),v._v(" "),e("li",[e("p",[v._v("302 临时性重定向")])]),v._v(" "),e("li",[e("p",[v._v("304 表示服务器允许访问资源，但因发生请求未满足条件的情况")])]),v._v(" "),e("li",[e("p",[v._v("400 请求报文存在语法错误")])]),v._v(" "),e("li",[e("p",[v._v("401 表示发送的请求需要有通过HTTP认证的认证消息")])]),v._v(" "),e("li",[e("p",[v._v("403 表示请求资源被拒绝")])]),v._v(" "),e("li",[e("p",[v._v("404 表示服务器上没有请求的资源")])]),v._v(" "),e("li",[e("p",[v._v("500 服务端在执行请求时发生错误")])]),v._v(" "),e("li",[e("p",[v._v("501 服务器不支持当前请求所需要的某个功能")])]),v._v(" "),e("li",[e("p",[v._v("503 表明服务器暂时处于超负荷或正在停机维护，无法处理请求")])]),v._v(" "),e("li",[e("p",[v._v("504 表明服务器作为网关或代理，但是没有及时从上游服务器收到请求")])])]),v._v(" "),e("h2",{attrs:{id:"js版本发送变化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js版本发送变化"}},[v._v("#")]),v._v(" JS版本发送变化")]),v._v(" "),e("ul",[e("li",[v._v("通过webpack打包时给JS设置Hash值，当Hash值不同时，表明JS发生变化，需要重新请求新的JS而不是用缓存的JS")]),v._v(" "),e("li",[v._v("通过引入JS后加一个"),e("code",[v._v("xxx.js?v=20200524")]),v._v("一个版本号，原理与hash类似")])]),v._v(" "),e("h2",{attrs:{id:"http和https区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http和https区别"}},[v._v("#")]),v._v(" HTTP和HTTPS区别")]),v._v(" "),e("ol",[e("li",[v._v("HTTPS需要申请证书")]),v._v(" "),e("li",[v._v("HTTP是明文传输，HTTPS使用了TLS进行加密传输")]),v._v(" "),e("li",[v._v("HTTP端口是80 HTTPS端口是443 二者使用的连接方式不同")]),v._v(" "),e("li",[v._v("HTTP连接是简单，无状态的；HTTPS是由TLS+HTTP构建的可进行加密传输、身份认证的网络协议。")])]),v._v(" "),e("h2",{attrs:{id:"闭包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[v._v("#")]),v._v(" 闭包")]),v._v(" "),e("ul",[e("li",[v._v("什么是闭包\n函数A中有一个函数B，函数B可以调用函数A的变量，函数B就是闭包")]),v._v(" "),e("li",[v._v("闭包的用途\n封装私有变量，防抖节流，回调方法")]),v._v(" "),e("li",[v._v("闭包是否会造成内存泄漏\n闭包并不会造成内存泄漏，造成内存泄漏的原因是因为IE的垃圾回收机制，在JS高程中是这样描述的：\n"),e("blockquote",[e("p",[v._v("由于IE9 之前的版本对JavaScript 对象和DOM 对象使用不同的垃圾收集。因此闭包在IE 的这些版本中会导致一些特殊的问题。具体来说，如果闭包的作用域链中保存着一个HTML 元素，那么就意味着该元素将无法被销毁。")])])])]),v._v(" "),e("h2",{attrs:{id:"原型链"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原型链"}},[v._v("#")]),v._v(" 原型链")]),v._v(" "),e("ul",[e("li",[v._v("什么是原型链\n原型链就是多个对象通过 "),e("code",[v._v("__proto__")]),v._v(" 的方式连接了起来")]),v._v(" "),e("li",[v._v("继承的原型链"),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("function Parent(value){\n\tthis.value = value\n}\nParent.prototype.getValue = function(){\n\treturn this.value\n}\nfunction Child(value){\n\tParent.call(this, value)\n}\nChild.prototype = new Parent()\n")])])])])]),v._v(" "),e("h2",{attrs:{id:"网络请求方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#网络请求方式"}},[v._v("#")]),v._v(" 网络请求方式")]),v._v(" "),e("ul",[e("li",[v._v("get\n用来获取数据，一般用来查询")]),v._v(" "),e("li",[v._v("post\n用来改变服务器的数据，常用来数据提交，新增等")]),v._v(" "),e("li",[v._v("put\n与post类似，但是put侧重于数据的修改，post侧重于数据的新增")]),v._v(" "),e("li",[v._v("delete\n删除服务器的资源")]),v._v(" "),e("li",[v._v("options\n浏览器预检请求")])]),v._v(" "),e("p",[v._v("GET请求由于参数在链接上面，因此url长度会根据浏览器以及服务器的不同有不同的限制，最大长度并不是固定的，如果请求参数过长，会返回414错误"),e("br")]),v._v(" "),e("ul",[e("li",[v._v("IE：对URL的最大限制为2083个字符，若超出这个数字，提交按钮没有任何反应。")]),v._v(" "),e("li",[v._v("Firefox：对Firefox浏览器URL的长度限制为：65536个字符。")]),v._v(" "),e("li",[v._v("Safari：URL最大长度限制为80000个字符。")]),v._v(" "),e("li",[v._v("Opera：URL最大长度限制为190000个字符。")]),v._v(" "),e("li",[v._v("Google(chrome)：URL最大长度限制为8182个字符。")]),v._v(" "),e("li",[v._v("Apache(Server)：能接受的最大url长度为8192个字符")]),v._v(" "),e("li",[v._v("Microsoft Internet Information Server(IIS)：n能接受最大url的长度为16384个字符。")])])])}),[],!1,null,null,null);_.default=a.exports}}]);