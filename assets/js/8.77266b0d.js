(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{341:function(e,t,v){"use strict";v.r(t);var a=v(33),_=Object(a.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"css"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#css"}},[e._v("#")]),e._v(" CSS")]),e._v(" "),v("h2",{attrs:{id:"盒模型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#盒模型"}},[e._v("#")]),e._v(" 盒模型")]),e._v(" "),v("ul",[v("li",[e._v("content-box(W3C标准盒模型)")]),e._v(" "),v("li",[e._v("border-box(IE盒模型)")]),e._v(" "),v("li",[e._v("padding-box")]),e._v(" "),v("li",[e._v("margin-box(浏览器未实现)")])]),e._v(" "),v("h2",{attrs:{id:"bfc（块级格式化上下文）"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#bfc（块级格式化上下文）"}},[e._v("#")]),e._v(" BFC（块级格式化上下文）")]),e._v(" "),v("p",[e._v("IE可通过zoom: 1触发\n触发条件：")]),e._v(" "),v("ol",[v("li",[e._v("根元素")]),e._v(" "),v("li",[e._v("float不为none")]),e._v(" "),v("li",[e._v("overflow不为visible")]),e._v(" "),v("li",[e._v("display: inline-block, table")]),e._v(" "),v("li",[e._v("position: absolute/fixed")])]),e._v(" "),v("h2",{attrs:{id:"层叠上下文"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#层叠上下文"}},[e._v("#")]),e._v(" 层叠上下文")]),e._v(" "),v("p",[e._v("触发条件：")]),e._v(" "),v("ol",[v("li",[e._v("根层叠上下文HTML")]),e._v(" "),v("li",[e._v("position")]),e._v(" "),v("li",[e._v("css3属性\n"),v("ul",[v("li",[e._v("flex")]),e._v(" "),v("li",[e._v("transform")]),e._v(" "),v("li",[e._v("opacity")]),e._v(" "),v("li",[e._v("filter")]),e._v(" "),v("li",[e._v("will-change\n同一层叠上下文在z轴上排序"),v("br"),e._v("\nz-index为正值 > z-index: 0/auto > 行内元素 > 浮动元素 > 块级元素 > z-index为负值 > background/boarder")])])])]),e._v(" "),v("h2",{attrs:{id:"css动画"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#css动画"}},[e._v("#")]),e._v(" CSS动画")]),e._v(" "),v("ul",[v("li",[e._v("transition: 过渡动画\n"),v("ul",[v("li",[e._v("transition-property: 属性")]),e._v(" "),v("li",[e._v("transition-duration: 间隔")]),e._v(" "),v("li",[e._v("transition-timing-function: 区线")]),e._v(" "),v("li",[e._v("transition-delay: 延迟")]),e._v(" "),v("li",[e._v("常用钩子：transitionend")])])]),e._v(" "),v("li",[e._v("animation / keyframes\n"),v("ul",[v("li",[e._v("animation-name: 动画名称，对应 @keyframes")]),e._v(" "),v("li",[e._v("animation-duration: 间隔")]),e._v(" "),v("li",[e._v("animation-timing-function: 区线")]),e._v(" "),v("li",[e._v("animation-delay: 延迟")]),e._v(" "),v("li",[e._v("animation-iteration-count: 次数\n"),v("ul",[v("li",[e._v("infinite: 循环动画")])])]),e._v(" "),v("li",[e._v("animation-direction: 方向\n"),v("ul",[v("li",[e._v("alternate: 反向播放")])])]),e._v(" "),v("li",[e._v("animation-fill-mode: 静止模式\n"),v("ul",[v("li",[e._v("forwards: 停止时，保留最后一帧")]),e._v(" "),v("li",[e._v("backwards: 停止时，回到第一帧")]),e._v(" "),v("li",[e._v("both: 同时运用上两者")])])]),e._v(" "),v("li",[e._v("常用钩子: animationend")])])]),e._v(" "),v("li",[e._v("动画属性\n"),v("ul",[v("li",[e._v("translate 平移")]),e._v(" "),v("li",[e._v("scale 缩放")]),e._v(" "),v("li",[e._v("rotate 旋转")]),e._v(" "),v("li",[e._v("skew 二维平面上的倾斜转换")]),e._v(" "),v("li",[e._v("opacity")]),e._v(" "),v("li",[e._v("color")])])])]),e._v(" "),v("h1",{attrs:{id:"javascript"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#javascript"}},[e._v("#")]),e._v(" JavaScript")]),e._v(" "),v("h2",{attrs:{id:"执行上下文ec"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#执行上下文ec"}},[e._v("#")]),e._v(" 执行上下文EC")]),e._v(" "),v("p",[e._v("包含三个部分")]),e._v(" "),v("ul",[v("li",[e._v("变量对象VO：可以抽象为一种"),v("strong",[e._v("数据作用域")]),e._v("，它存储着该执行上下文中所有的"),v("strong",[e._v("变量和函数声明（不包含函数表达式）")]),e._v("，当它处于 active EC 中时，被称为活动对象AO")]),e._v(" "),v("li",[e._v("作用域链（词法作用域）：可以理解为一组对象列表，包含父级和自身变量对象，因此才可以访问的父级里声明的变量或函数。由两部分组成\n"),v("ul",[v("li",[v("code",[e._v("[[scope]]")]),e._v("：指向父级的变量对象和作用域链，即包含父级的"),v("code",[e._v("[[scope]]")]),e._v("和AO")]),e._v(" "),v("li",[e._v("AO：自身活动对象")])])]),e._v(" "),v("li",[e._v("this指向")])]),e._v(" "),v("p",[e._v("类型")]),e._v(" "),v("ul",[v("li",[e._v("全局执行上下文")]),e._v(" "),v("li",[e._v("函数执行上下文")]),e._v(" "),v("li",[e._v("eval执行上下文")])]),e._v(" "),v("p",[e._v("代码执行过程")]),e._v(" "),v("ul",[v("li",[e._v("创建全局上下文global EC")]),e._v(" "),v("li",[e._v("全局执行上逐行自上而下执行。遇到函数时，函数执行上下文被push到执行栈顶层")]),e._v(" "),v("li",[e._v("函数执行上下文被激活，成为active EC，开始执行函数中代码，全局执行上下文被挂起")]),e._v(" "),v("li",[e._v("函数执行完之后，被pop移出执行栈，全局执行上下文继续执行")])]),e._v(" "),v("h2",{attrs:{id:"闭包"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[e._v("#")]),e._v(" 闭包")]),e._v(" "),v("p",[e._v("闭包属于特殊的作用域，静态作用域。在父级被销毁后，返回的子函数"),v("code",[e._v("[[scope]]")]),e._v("中仍然保留着父级的变量对象和作用域链，因此可以继续访问到父级的变量对象。")]),e._v(" "),v("h2",{attrs:{id:"babel编译原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#babel编译原理"}},[e._v("#")]),e._v(" babel编译原理")]),e._v(" "),v("ul",[v("li",[e._v("首先babylon将高级的代码解析为AST")]),e._v(" "),v("li",[e._v("babel-traverse对AST进行遍历转译，得到新的AST")]),e._v(" "),v("li",[e._v("babel-generator将新的AST转化为ES5代码")])]),e._v(" "),v("h2",{attrs:{id:"跨标签页通讯"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#跨标签页通讯"}},[e._v("#")]),e._v(" 跨标签页通讯")]),e._v(" "),v("p",[e._v("不同标签页间的通讯，原理是运用一些可共享的中间介质")]),e._v(" "),v("ul",[v("li",[e._v("通过父页面window.open 和 子页面的postMessage\n"),v("ul",[v("li",[e._v("目标targetWindow.postMessage(message, Origin)")]),e._v(" "),v("li",[e._v("接收信息的窗口addEventListener('message', cb)")])])]),e._v(" "),v("li",[e._v("设置同域下共享的localStorage和onstorage\n"),v("ul",[v("li",[e._v("重复写入相同值无法触发")]),e._v(" "),v("li",[e._v("会受到浏览器隐身模式等的限制")]),e._v(" "),v("li",[e._v("onstorage只有其他同源窗口会触发，当前窗口不会触发")])])]),e._v(" "),v("li",[e._v("设置共享cookie与不断轮询脏检查")]),e._v(" "),v("li",[e._v("借助服务端或者中间层实现")])]),e._v(" "),v("h2",{attrs:{id:"浏览器架构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器架构"}},[e._v("#")]),e._v(" 浏览器架构")]),e._v(" "),v("ul",[v("li",[e._v("用户界面")]),e._v(" "),v("li",[e._v("主进程")]),e._v(" "),v("li",[e._v("内核\n"),v("ul",[v("li",[e._v("渲染引擎")]),e._v(" "),v("li",[e._v("JS引擎\n"),v("ul",[v("li",[e._v("执行栈")])])]),e._v(" "),v("li",[e._v("事件触发线程\n"),v("ul",[v("li",[e._v("消息队列\n"),v("ul",[v("li",[e._v("宏任务")]),e._v(" "),v("li",[e._v("微任务")])])])])]),e._v(" "),v("li",[e._v("网络异步线程")]),e._v(" "),v("li",[e._v("定时器线程")])])])]),e._v(" "),v("h2",{attrs:{id:"web-worker"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#web-worker"}},[e._v("#")]),e._v(" Web Worker")]),e._v(" "),v("p",[e._v("现代浏览器为JavaScript创造的多线程环境。可以新建并将部分任务分配到worker线程并行运行，两个线程可独立运行，互不干扰，可以通过自带的信息机制相互通信。")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("const worker = new Worker('work.js') //参数必须是网络获取的脚本文件，不能是本地资源\nworker.postMessage('message from 主线程') //主线程向worker传递信息\nworker.terminate() //主线程关闭worker\n//worker中\nself.postMessage('message from worker') //worker向主线程传递信息，self是worker中的全局对象\nself.close() //worker线程关闭自己\n")])])]),v("p",[e._v("限制:")]),e._v(" "),v("ul",[v("li",[e._v("同源限制")]),e._v(" "),v("li",[e._v("无法使用document/window/alert/confirm")]),e._v(" "),v("li",[e._v("无法加载本地资源")])]),e._v(" "),v("h2",{attrs:{id:"websocket"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#websocket"}},[e._v("#")]),e._v(" WebSocket")]),e._v(" "),v("p",[e._v("WebSocket是一个持久化的协议，基于HTTP，目的是使服务端可以主动push")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("//客户端\nconst ws = new WebSocket('ws://localhost:8080') //使用的协议标识符是ws是在TCP协议之上的，如果加密则是wss（中间多一层TLS）\nws.addEventListener('open', function(event){\n\tws.send('Hello Server')\n})\nws.addEventListener('message', function(event){\n\tconsole.log(event.data)\n})\n//node服务端\nconst WebSocketServer = require('ws').Server\nconst wsServer = new WebSocketServer({port: 8080})\nwsServer.on('connection', (socket)=>{\n\tsocket.on('message', message=>{\n\t\tconsole.log('接收到客户端消息:'+message)\n\t\tsocket.send('服务器回应:'+ someData)\n\t})\n})\n")])])]),v("p",[e._v("使用websocket协议没有跨域问题，但是可以通过设置Origin进行限制，同时请求头会有新的header")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("Upgrade: websocket //表示升级为websocket协议\nConnection: Upgrade //表示使用升级协议\nSec-WebSocket-Version //表示websocket协议版本\nSec-WebSocket-Key //浏览器随机生成与服务端的Accept相互匹配\n")])])]),v("p",[e._v("响应头也有新的header")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("Connection: Upgrade\nSec-WebSocket-Accept: \nUpgrade: websocket\n")])])]),v("p",[e._v("且状态码为101 表示切换协议\nSec-WebSocket-Key和Sec-WebSocket-Accept作用")]),e._v(" "),v("ul",[v("li",[e._v("避免服务端收到非法的websocket连接")]),e._v(" "),v("li",[e._v("确保服务端理解websocket连接")]),e._v(" "),v("li",[e._v("用浏览器里发起ajax请求，设置header时，Sec-WebSocket-Key以及其他相关的header是被禁止的")])]),e._v(" "),v("p",[e._v("Sec-WebSocket-Accept的获得")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("const crypto = require('crypto')\nconst number = '258EAFA5-E914-47DA-95CA-C5AB0DC85B11'\nconst webSocketKey = 'IHfMdf8a0aQXbwQO1pkGdA=='\nlet webSocketAccept = crypto.createHash('sha1').update(webSocketKey+number).digest('base64')\nconsole.log(websocketAccept);//aWAY+V/uyz5ILZEoWuWdxjnlb7E=\n")])])]),v("h1",{attrs:{id:"算法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[e._v("#")]),e._v(" 算法")]),e._v(" "),v("p",[e._v("五大算法")]),e._v(" "),v("ul",[v("li",[e._v("贪心算法")]),e._v(" "),v("li",[e._v("分治算法")]),e._v(" "),v("li",[e._v("动态规划")]),e._v(" "),v("li",[e._v("回溯法")]),e._v(" "),v("li",[e._v("分支限界法")])])])}),[],!1,null,null,null);t.default=_.exports}}]);