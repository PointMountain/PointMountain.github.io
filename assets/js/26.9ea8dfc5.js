(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{368:function(t,e,n){"use strict";n.r(e);var s=n(33),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"为什么要做前端监控"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么要做前端监控"}},[t._v("#")]),t._v(" 为什么要做前端监控")]),t._v(" "),n("ul",[n("li",[t._v("更快发现问题和解决问题")]),t._v(" "),n("li",[t._v("做产品的决策依据")]),t._v(" "),n("li",[t._v("提升前端工程师的技术深度和广度")]),t._v(" "),n("li",[t._v("为业务扩展提供了更多可能性")])]),t._v(" "),n("h2",{attrs:{id:"前端监控目标"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前端监控目标"}},[t._v("#")]),t._v(" 前端监控目标")]),t._v(" "),n("ul",[n("li",[t._v("稳定性\n"),n("ul",[n("li",[t._v("JS错误")]),t._v(" "),n("li",[t._v("资源异常")]),t._v(" "),n("li",[t._v("接口错误")]),t._v(" "),n("li",[t._v("白屏")])])]),t._v(" "),n("li",[t._v("用户体验\n"),n("ul",[n("li",[t._v("加载时间")]),t._v(" "),n("li",[t._v("首字节时间")]),t._v(" "),n("li",[t._v("首次绘制")]),t._v(" "),n("li",[t._v("首次内容绘制")]),t._v(" "),n("li",[t._v("首次有意义绘制")]),t._v(" "),n("li",[t._v("首次输入延迟")])])]),t._v(" "),n("li",[t._v("业务\n"),n("ul",[n("li",[t._v("PV")]),t._v(" "),n("li",[t._v("UV")]),t._v(" "),n("li",[t._v("页面的停留时间")])])])]),t._v(" "),n("h2",{attrs:{id:"前端监控流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前端监控流程"}},[t._v("#")]),t._v(" 前端监控流程")]),t._v(" "),n("p",[t._v("埋点 -> 数据采集 -> 数据建模存储 -> 数据传输（实时、批量）-> 数据统计（分析、挖掘）-> 数据可视化/报告和报警 =》改进埋点")]),t._v(" "),n("h2",{attrs:{id:"常见的埋点方案"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常见的埋点方案"}},[t._v("#")]),t._v(" 常见的埋点方案")]),t._v(" "),n("ul",[n("li",[t._v("代码埋点")]),t._v(" "),n("li",[t._v("可视化埋点->本质就是系统用来代替手工插入埋点代码")]),t._v(" "),n("li",[t._v("无痕埋点->所有事件都被记录下来")])]),t._v(" "),n("h2",{attrs:{id:"监控方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#监控方式"}},[t._v("#")]),t._v(" 监控方式")]),t._v(" "),n("ol",[n("li",[t._v("当JavaScript代码错误或者引入资源错误的时候通过"),n("code",[t._v("window.addEventListener('error', (event)=>{})")]),t._v("进行监听，然后根据"),n("code",[t._v("event.target.src || event.target.href")]),t._v("是否有值判断是js错误还是资源错误，如果有值，则是资源错误")]),t._v(" "),n("li",[t._v("当Promise发送错误，比如未catch之类需要通过"),n("code",[t._v("window.addEventListener('unhandledrejection',(event)=>{})")]),t._v("进行监听，然后进行数据收集")]),t._v(" "),n("li",[t._v("接口错误的监控前端需要重写"),n("code",[t._v("XMLHttpRequest.prototype.open")]),t._v("和"),n("code",[t._v("XMLHttpRequest.prototype.send")]),t._v("，并监听"),n("code",[t._v("load, error, abort")]),t._v("事件从而获取请求的数据以及错误信息")]),t._v(" "),n("li",[t._v("白屏错误的监控可以通过在可视范围内选取多个点，通过"),n("code",[t._v("document.elementsFromPoint(pointX, pointY)")]),t._v("拿到点所在的dom元素，之后根据dom属性进行判断是否白屏，如果超过规定数量的点都是白屏点，则认为页面发送白屏")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("//可以通过屏幕横竖画十字的点进行判断\nfor (let i = 1; i < 9; i++) {\n\t//elementsFromPoint() 方法可以获取到当前视口内指定坐标处，由里到外排列的所有元素。\n\tlet xElements = document.elementsFromPoint(\n\t\twindow.innerWidth * i / 10,window.innerHeight / 2)  //x轴从左到右9个点\n\tlet yElements = document.elementsFromPoint(\n\t\twindow.innerWidth / 2, window.innerHeight * i / 10)  //y轴从上到下9个点\n\tisWrapper(xElements[0]) //判断最内部元素是否是白屏点\n\tisWrapper(yElements[0])\t//判断最内部元素是否是白屏点\n}\n")])])]),n("p",[t._v("需要注意的是白屏监听要在页面加载完之后因此需要判断"),n("code",[t._v("document.readyState === 'complete'")]),t._v("否则需要"),n("code",[t._v("window.addEventListener('load', listener)")]),t._v("\n5. 用户体验指标中需要获取浏览器渲染的各个阶段时间，需要用"),n("code",[t._v("performance.timing")]),t._v("中的各个时间属性，之后再计算出自己想要的时间，发送给服务器，需要注意的是因为这些时间是需要在加载完之后才可以获取的因此需要监听\t"),n("code",[t._v("load")]),t._v("才可以\n6. 还有页面元素属性 "),n("code",[t._v("FMP LCP")]),t._v("等需要"),n("code",[t._v("PerformanceObserve")]),t._v("进行创建\neg:")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PerformanceObserver")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("entryList"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" observe")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" perfEntries "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" entryList"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getEntries")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LCP")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" perfEntries"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\tobserve"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("disconnect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不再观察了")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("observe")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("entryTypes"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'largest-contentful-paint'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("blockquote",[n("p",[t._v("观察FMP 即页面中有意义的元素，是需要单独为dom元素设置属性"),n("code",[t._v("elementtiming")]),t._v("，才会被识别")])])])}),[],!1,null,null,null);e.default=a.exports}}]);