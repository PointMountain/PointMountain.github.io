(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{336:function(t,s,a){t.exports=a.p+"assets/img/proto.3ee04ff5.png"},337:function(t,s,a){t.exports=a.p+"assets/img/eventloop.e2582e98.png"},338:function(t,s,a){t.exports=a.p+"assets/img/eventloop2.a352c183.png"},339:function(t,s,a){t.exports=a.p+"assets/img/treeshaking.cff10ae6.png"},340:function(t,s,a){t.exports=a.p+"assets/img/zhan.b899cb27.jpg"},365:function(t,s,a){"use strict";a.r(s);var n=a(33),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"js的数据类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#js的数据类型"}},[t._v("#")]),t._v(" JS的数据类型")]),t._v(" "),n("p",[t._v("原始类型\nnumber boolean string symbol undefined null bigint\n引用类型\nObject Function")]),t._v(" "),n("ul",[n("li",[t._v("typeof 只能判断非null的原始类型和Function")]),t._v(" "),n("li",[t._v("instanceof 内部通过原型链的方式来判断是否为构建函数的实例"),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 手写instanceof")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("myInstanceof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("left"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" right")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" pro "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" left"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pro"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pro "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" right"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    pro "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pro"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一般不能用来判断基本类型，例如1 instanceof Number ==> false，但是可以通过hack的方式判断基本类型")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("checkNumber")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Symbol"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hasInstance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" number "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'number'")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("checkNumber")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])])])]),t._v(" "),n("li",[t._v("Object.prototype.toString.call() 通过对象内置的toString方法")])]),t._v(" "),n("blockquote",[n("ul",[n("li",[t._v("原始类型储存在栈中，引用类型储存在堆中，但是引用类型的对象地址也储存在栈中。")]),t._v(" "),n("li",[t._v("bigint可以解决大数相加算法题。")])])]),t._v(" "),n("p",[t._v("isXXX API")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("Array"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断是否是数组")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断是否是非数字")]),t._v("\n")])])]),n("h2",{attrs:{id:"for-循环和-foreach循环的区别在于？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#for-循环和-foreach循环的区别在于？"}},[t._v("#")]),t._v(" for 循环和 forEach循环的区别在于？")]),t._v(" "),n("p",[t._v("for是原生的 forEach是Array中的一个方法")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("flat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("i")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Array"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("flat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"类型转换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类型转换"}},[t._v("#")]),t._v(" 类型转换")]),t._v(" "),n("p",[t._v("类型转换分为两种情况，分别为强制转换以及隐式转换")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("[] == ![] => [] == false => [] == 0 => '' == 0 => 0 == 0\n")])])]),n("p",[t._v("转布尔值的规则")]),t._v(" "),n("ul",[n("li",[t._v("undefined, null, false, NaN, '', 0, -0 都转为false")]),t._v(" "),n("li",[t._v("其他所有值都转为true，包括所有对象，负数")])]),t._v(" "),n("h2",{attrs:{id:"this指向"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#this指向"}},[t._v("#")]),t._v(" this指向")]),t._v(" "),n("ul",[n("li",[t._v("普通函数\n"),n("ol",[n("li",[t._v("函数被谁调用，那么this就是谁，如果没有对象调用，那么this就是window，严格模式下是undefined")]),t._v(" "),n("li",[t._v("利用 call，apply，bind 改变 this，这个优先级仅次于 new"),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 多bind链式绑定this只会根据第一个bind的内容进行绑定")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//等价于")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fn2")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),n("li",[t._v("new出来的就是绑定到新的对象上\n"),n("code",[t._v("let son = new Parent()")]),t._v("此时this就是绑定到son上的无法更改，优先级最高")])])]),t._v(" "),n("li",[t._v("箭头函数本身没有this，只取决于离他最近的普通函数的this，无法通过bind更改")])]),t._v(" "),n("h2",{attrs:{id:"闭包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[t._v("#")]),t._v(" 闭包")]),t._v(" "),n("p",[t._v("定义：假如一个函数能访问外部的变量，那么这个函数它就是一个闭包，而不是一定要返回一个函数")]),t._v(" "),n("ul",[n("li",[t._v('由于闭包中引用的外部变量，所以JavaScript引擎判断这是一个闭包，因此会在堆空间创建一个"closure(闭包名)"的对象(在'),n("code",[t._v("[[Scopes]]")]),t._v("中)，用来保存引用的外部变量值，这是一个内部对象，JavaScript是无法访问的")]),t._v(" "),n("li",[t._v('闭包也存在垃圾回收机制，只是因为引用一直存在所以不会被回收垃圾（"closure(闭包名)"对象对外部变量的引用）')])]),t._v(" "),n("h2",{attrs:{id:"new操作符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#new操作符"}},[t._v("#")]),t._v(" new操作符")]),t._v(" "),n("p",[n("code",[t._v("new")]),t._v("操作符可以帮助我们构建出一个实例，并且绑定上"),n("code",[t._v("this")]),t._v("，内部执行步骤可大概分为以下几步：")]),t._v(" "),n("ol",[n("li",[t._v("新生成一个对象")]),t._v(" "),n("li",[t._v("对象连接到构造函数的原型上，并绑定this")]),t._v(" "),n("li",[t._v("执行构造函数的代码")]),t._v(" "),n("li",[t._v("返回新对象\n但是第四步存在特殊情况，如果构造函数返回一个对象，那么内部构建出来的对象会被返回的对象所覆盖，所以一般构造函数不要返回对象，如果返回原始类型则不会有影响")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("myNew")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("F")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("F")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("F")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" obj\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果构造函数返回对象")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Test { name: 'ming' }")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" age"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" t "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ming'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { age: 26 }")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'undefined'")]),t._v("\n")])])]),n("h2",{attrs:{id:"作用域"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#作用域"}},[t._v("#")]),t._v(" 作用域")]),t._v(" "),n("p",[t._v("作用域可以理解为变量的可访问性，总共分为三种类型，分别为")]),t._v(" "),n("ul",[n("li",[t._v("全局作用域")]),t._v(" "),n("li",[t._v("函数作用域")]),t._v(" "),n("li",[t._v("块级作用域，ES6中的let、const就可以产生该作用域")])]),t._v(" "),n("p",[t._v("词法作用域就是指作用域是由代码中函数声明的位置来决定的，所以词法作用域是静态的作用域，通过它就能够预测代码在执行过程中如何查找标识符。\n词法作用域是代码编译阶段就决定好的，和函数是怎么调用的没有关系。\n作用域链是由词法作用域构成的。根据作用域链查找内容，会先查找自己内部的词法环境，再查找变量环境，找不到会去outer指向的执行上下文的词法环境查找，依次类推。"),n("code",[t._v("[[Scopes]]")]),t._v("就是作用域链。")]),t._v(" "),n("h2",{attrs:{id:"原型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原型"}},[t._v("#")]),t._v(" 原型")]),t._v(" "),n("p",[n("img",{attrs:{src:a(336),alt:""}})]),t._v(" "),n("ul",[n("li",[t._v("所有对象都有一个属性"),n("code",[t._v("__proto__")]),t._v("指向一个对象，也就是原型")]),t._v(" "),n("li",[t._v("每个对象的原型都可以通过"),n("code",[t._v("constructor")]),t._v("找到构造函数，构造函数也可以通过"),n("code",[t._v("prototype")]),t._v("找到原型")]),t._v(" "),n("li",[t._v("所有函数都可以通过"),n("code",[t._v("__proto__")]),t._v("找到"),n("code",[t._v("Function")]),t._v("对象")]),t._v(" "),n("li",[t._v("所有对象都可以通过"),n("code",[t._v("__proto__")]),t._v("找到"),n("code",[t._v("Object")]),t._v("对象")]),t._v(" "),n("li",[t._v("对象直接通过"),n("code",[t._v("__proto__")]),t._v("连接起来，这样称之为原型链。当前对象上不存在的属性可以通过原型链一层层往上查找，直到顶层的"),n("code",[t._v("Object")]),t._v("对象，在往上就是"),n("code",[t._v("null")]),t._v("了")])]),t._v(" "),n("h2",{attrs:{id:"继承"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#继承"}},[t._v("#")]),t._v(" 继承")]),t._v(" "),n("p",[t._v("即使是ES6中的"),n("code",[t._v("class")]),t._v("也不是其他语言中的类，本质上就是一个函数。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nPerson "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),n("p",[t._v("ES5和ES6继承的区别：")]),t._v(" "),n("ol",[n("li",[t._v("ES6继承的子类需要调用"),n("code",[t._v("super()")]),t._v("才能拿到子类，ES5通过apply绑定的方式")]),t._v(" "),n("li",[t._v("类声明不会提升，与"),n("code",[t._v("let、const")]),t._v("一致")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ES5继承")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Super")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Super")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getName")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sub")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sub")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Super")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  constructor"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    value"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Sub"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    enumerable"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    writable"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    configurable"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h2",{attrs:{id:"深浅拷贝"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#深浅拷贝"}},[t._v("#")]),t._v(" 深浅拷贝")]),t._v(" "),n("h3",{attrs:{id:"浅拷贝"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#浅拷贝"}},[t._v("#")]),t._v(" 浅拷贝")]),t._v(" "),n("p",[t._v("两个对象第一层的引用不相同就是浅拷贝的含义\n可以通过"),n("code",[t._v("assign")]),t._v("、扩展运算符、"),n("code",[t._v("concat")]),t._v("等方式来实现")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  age"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" c "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("a "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\na"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 18")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 18")]),t._v("\n")])])]),n("h3",{attrs:{id:"深拷贝"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#深拷贝"}},[t._v("#")]),t._v(" 深拷贝")]),t._v(" "),n("p",[t._v("两个对象内部所有的引用都不相同就是深拷贝的含义。")]),t._v(" "),n("ul",[n("li",[t._v("最简单的方法"),n("code",[t._v("JSON.parse(JSON.stringify(object))")]),t._v("\n该方法存在许多问题，首先是只支持JSON支持的类型，JSON是门通用的语言，并不支持JS中所有类型仅对"),n("code",[t._v("object, array, string, number, 'true', 'false', 'null'")]),t._v("支持，同时还会存在不能处理循环引用的问题，例如对Vue实例使用该方法就会报错")]),t._v(" "),n("li",[t._v("如果想解决"),n("code",[t._v("JSON.parse(JSON.stringify(object))")]),t._v("所产生的问题，可以通过递归的方式来实现代码"),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过WeakMap解决循环引用问题")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" map "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WeakMap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("deepClone")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("map"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("has")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" map"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newObj\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      newObj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("newObj")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("obj")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arguments"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      newObj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("source"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      newObj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      newObj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Object.getOwnPropertyDescriptors() 方法用来获取一个对象的所有自身属性的描述符")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" desc "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOwnPropertyDescriptors")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" clone "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" desc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    map"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" clone"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" key "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        newObj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("deepClone")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" newObj\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" obj\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),t._v("当然通过递归进行深克隆会存在爆栈的问题，因为执行栈的大小是有限制的，到一定数量栈就会爆掉。解决爆栈的问题，可以通过遍历的方式来改写递归。通过层序遍历（BFS）来解决，也可以通过加入定时器的方法来把当前任务拆分为其他很多小任务。\n"),n("blockquote",[n("p",[t._v("为什么使用定时器可以解决栈移除问题？ function foo() { setTimeout(foo, 0) } foo() 像setTimeout、setInterval、Promise 这样的全局函数不是JavaScript的一部分，而是Web API部分。 当遇到Web API时，会将其回调函数(foo)交给WebAPIs处理，此时调用栈中foo函数执行完毕，出栈，栈为空；回调函数会被发送到任务队列中，等待event loop事件循环将其捞出，重新放入到堆栈中。参考：https://juejin.im/post/5d2d146bf265da1b9163c5c9#heading-15")])])])]),t._v(" "),n("h2",{attrs:{id:"promise"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#promise"}},[t._v("#")]),t._v(" Promise")]),t._v(" "),n("ul",[n("li",[t._v("Promise中只有涉及到状态变更后才需要被执行的回调才算是微任务，比如说"),n("code",[t._v("then")]),t._v("、"),n("code",[t._v("catch")]),t._v("、"),n("code",[t._v("finally")]),t._v("，其它所有的代码执行都是同步执行。")]),t._v(" "),n("li",[n("code",[t._v("Promise.then")]),t._v("虽然是同步任务，但是将回调放入队列的时机取决于前面Promise状态，如果Promise状态为pending，那么成功或失败的回调会分别被加入至"),n("code",[t._v("[[PromiseFulfillReactions]]")]),t._v(" 和 "),n("code",[t._v("[[PromiseRejectReactions]]")]),t._v(" 中，如果Promise状态为非pending状态，回调就会成为Promise Jobs，也就是微任务，放入微任务队列中。因此得出结论："),n("strong",[t._v("链式调用中，只有前一个"),n("code",[t._v("then")]),t._v("的回调执行完毕后，跟着的"),n("code",[t._v("then")]),t._v("中的回调才会被加入至微任务队列。")])]),t._v(" "),n("li",[n("strong",[t._v("同一个Promise的每个链式调用的开端会首先一次进入微任务队列。")])])]),t._v(" "),n("p",[t._v("高阶例子：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("Promise"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"then1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Promise"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"then1-1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Promise"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"then1-2"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"then2"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"then3"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"then4"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n实际顺序：\nthen1\nthen1-1\nthen2\nthen3\nthen4\nthen1-2\n*/")]),t._v("\n")])])]),n("p",[t._v("上面"),n("code",[t._v("then1-2")]),t._v("之所以最后出现的原因，是因为：")]),t._v(" "),n("ol",[n("li",[t._v("根据Promise A+ 规范，如果"),n("code",[t._v("resolve")]),t._v("了一个"),n("code",[t._v("Promise")]),t._v("，需要为其加上一个"),n("code",[t._v("then")]),t._v("并"),n("code",[t._v("resolve")]),t._v("，因此想当于多入队一次微任务。"),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyPromise")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currentState "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PENDING")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resolve"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),n("li",[t._v("根据ECMA - 262规范，当"),n("code",[t._v("Promise resolve")]),t._v("了一个Promise时，会产生一个"),n("code",[t._v("NewPromiseResolveThenableJob")]),t._v("，这是属于Promise Jobs中的一种，也是微任务，并且该Jobs还会调用一次"),n("code",[t._v("then")]),t._v("函数来"),n("code",[t._v("resolve Promise")]),t._v("，因此又生成了一次微任务。")])]),t._v(" "),n("p",[t._v("根据以上两点得出结论，Promise中如果resolve了一个Promise，会落后两个微任务队列，因此上面例子中"),n("code",[t._v("then1-2")]),t._v("才最后出现。")]),t._v(" "),n("p",[t._v("关于Promise相关的两个题目")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://github.com/KieSun/fucking-frontend/issues/5",target:"_blank",rel:"noopener noreferrer"}},[t._v("消息队列"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/KieSun/fucking-frontend/issues/6",target:"_blank",rel:"noopener noreferrer"}},[t._v("Promise all 错误处理"),n("OutboundLink")],1)])]),t._v(" "),n("h2",{attrs:{id:"async、await"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#async、await"}},[t._v("#")]),t._v(" async、await")]),t._v(" "),n("p",[t._v("ES7引入了async/await，提供了再不阻塞主线程的情况下使用同步代码实现异步访问资源的能力，并且使得代码逻辑更加清晰。async/await使用了同步代码的方式实现了异步处理逻辑，支持使用try catch来捕获异常。async/await使用了生成器（Generator）和Promise两种技术。")]),t._v(" "),n("h3",{attrs:{id:"生成器vs协程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#生成器vs协程"}},[t._v("#")]),t._v(" 生成器VS协程")]),t._v(" "),n("p",[t._v("生成器函数是一个带星号函数，而且是可以暂停执行和恢复执行的。\n生成器函数之所以能暂停和恢复，是通过协程来实现的。协程是一种比线程更加轻量级的存在。协程可以看作是跑在线程上的任务，一个线程上可以存在多个协程，但是线程上同时只能执行一个协程，当要在A协程执行时启动B协程，A协程就会将主线程的控制权交给B协程，这样A协程暂停执行，B协程恢复执行，此时A协程被称为B协程的父协程。因为协程不是被操作系统内核所管理，而是由程序所控制，因此不会像线程切换那样消耗资源。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 生成器例子")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" y "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过yield关键字暂停it协程的执行，并返回主要信息给父协程")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" z "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" z"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在协程执行期间，如果遇到return，那么JavaScript引擎会结束当前协程，并将return后面的内容返回给父协程")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" it "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个协程it")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("it"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => {value: 6, done: false} 调用it.next才会让it协程开始执行")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("it"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => {value: 8, done: false}")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("it"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => {value: 42, done: true}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当在it协程中调用了yield方法时，JavaScript引擎会保存it协程当前的执行栈信息，并恢复父协程的调用栈信息。同样，在父协程执行it.next是，JavaScript引擎会保存父协程的调用栈信息，并恢复it协程的调用栈信息。")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行生成器的代码 co")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("co")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("it")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" done "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" it"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("done"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Promise"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"事件循环"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#事件循环"}},[t._v("#")]),t._v(" 事件循环")]),t._v(" "),n("p",[t._v("浏览器页面是由消息队列和事件循环系统来驱动的。\n"),n("img",{attrs:{src:a(337),alt:""}}),t._v(" "),n("img",{attrs:{src:a(338),alt:""}}),t._v("\nJavaScript是一门单线程语言，在执行过程中永远只能同时执行一个任务，任何异步的调用都只是在模拟这个过程，或者说可以直接认为JavaScript中的异步就是延迟执行的同步代码。\n异步任务可以看作是异步回调，通常异步回调主要有两种方式：")]),t._v(" "),n("ol",[n("li",[t._v("把异步回调函数封装成一个"),n("strong",[t._v("宏任务")]),t._v("，添加到消息队列尾部，当循环系统执行到该任务的时候执行回调函数。消息队列中每个任务都可以看作是一个宏任务，因此宏任务不一定是放入任务队列就会很快执行。宏任务的种类：同步代码、setTimeout回调、setInteval回调、IO、UI交互事件、postMessage、MessageChannel")]),t._v(" "),n("li",[t._v("第二种方式的执行时机是在主函数执行结束之后，当前宏任务结束之前执行回调函数，这通常都是以"),n("strong",[t._v("微任务")]),t._v("形式体现的。当JavaScript执行一段脚本的时候，V8会为其创建一个全局执行上下文，同时也会在内部创建一个微任务队列用于存放微任务。在当前宏任务中的JavaScript快执行完成时，也就是JavaScript引擎准备退出全局执行上下文并清空调用栈的时候，引擎会检查其中的微任务队列，然后按照顺序执行队列中的微任务，这个时间点被称为"),n("strong",[t._v("检查点")]),t._v("。在执行微任务的过程中，如果产生了新的微任务，同样会将该微任务添加到当前队列中，引擎会一直循环微任务队列中的任务，知道队列为空才算执行结束。因此如果一直产生新的微任务那么永远也不会执行到下个宏任务。如果需要任务更快的执行就得用微任务保证。微任务的种类：Promise状态改变以后的回调函数（then函数执行，如果此时状态没变，回调只会被缓存，只有当状态改变，缓存的回调函数才会被丢到任务队列）、MutationObserver回调函数、queueMicrotask回调函数（新增的API）。")])]),t._v(" "),n("p",[t._v("Event Loop执行顺序：")]),t._v(" "),n("ol",[n("li",[t._v("执行主函数代码")]),t._v(" "),n("li",[t._v("执行完主函数代码后在当前宏任务结束之前，判断微任务队列中是否有微任务需要执行")]),t._v(" "),n("li",[t._v("循环执行所有微任务直至微任务队列为空（每一个Event Loop都有一个microtask队列）")]),t._v(" "),n("li",[t._v("是否有必要渲染页面")]),t._v(" "),n("li",[t._v("执行下一个宏任务\n"),n("blockquote",[n("p",[t._v("如果要在页面渲染以后最快知道，需要用宏任务而不是微任务，因为页面渲染实在微任务队列清空之后才会执行的，渲染完之后就会去执行下一个宏任务。")])])])]),t._v(" "),n("ul",[n("li",[t._v("Node中\n"),n("ul",[n("li",[t._v("timers 执行setTimeout setInterval回调")]),t._v(" "),n("li",[t._v("I/O 执行上一轮少数未执行的I/O回调")]),t._v(" "),n("li",[t._v("idle prepare")]),t._v(" "),n("li",[t._v("poll\n"),n("ul",[n("li",[t._v("回到timer执行回调 执行I/O回调")]),t._v(" "),n("li",[t._v("如果没有timer的话 如果poll不为空 会遍历执行回调队列同步执行直至队列为空或者达到系统限制；如果poll为空 如果有setImmediate会跳到check执行，如果没有的话会一直等待新的回调 然后执行（有超时设置）")])])]),t._v(" "),n("li",[t._v("check 执行setImmediate")]),t._v(" "),n("li",[t._v("close callbacks  执行close事件的callback")])])])]),t._v(" "),n("p",[n("strong",[n("a",{attrs:{href:"https://github.com/aooy/blog/issues/5",target:"_blank",rel:"noopener noreferrer"}},[t._v("Event Loop详细解释"),n("OutboundLink")],1)])]),t._v(" "),n("h2",{attrs:{id:"var-let-const"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#var-let-const"}},[t._v("#")]),t._v(" var let const")]),t._v(" "),n("p",[t._v("var会在解析的时候导致变量提升\nvar a = 1语法解析的时候会在最上面先声明var a\n之后进行赋值操作a=1\nlet const不会发生变量提升 但是会存在一个暂时性死区")]),t._v(" "),n("h2",{attrs:{id:"模块化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#模块化"}},[t._v("#")]),t._v(" 模块化")]),t._v(" "),n("ul",[n("li",[t._v("解决命名冲突")]),t._v(" "),n("li",[t._v("提高代码可重用性")]),t._v(" "),n("li",[t._v("提高代码的可维护性")])]),t._v(" "),n("p",[t._v("主流的模块化分为CommonJS以及ESM")]),t._v(" "),n("p",[t._v("CommonJS是Node独有的规范，Webpack也自己实现了这套东西，让我们能在浏览器里跑起来这个规范。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a.js")]),t._v("\nmodule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  a"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// or")]),t._v("\nexports"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// b.js")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" module "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./a.js'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 大致内部实现")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" module "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  exports"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("load")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("module")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 导出的内容")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("由此也可以看出为什么不能直接对exports直接赋值。")]),t._v(" "),n("p",[t._v("CommonJS和ESM之间的区别")]),t._v(" "),n("ul",[n("li",[t._v("前者支持动态导入，也就是"),n("code",[t._v("require(${path}/xx.js)")]),t._v("，后者可以用"),n("code",[t._v("import()")])]),t._v(" "),n("li",[t._v("前者是同步导入，因为用于服务端，文件都在本地，同步导入即使卡住主线程影响也不大。而后者是异步导入，因为用于浏览器，需要下载文件，如果也采用同步导入会对渲染有很大影响")]),t._v(" "),n("li",[t._v("前者导出时都是值拷贝，就算导出的值变了，导入的值也不会改变，所以如果想更新值，必然需要重新导入一次。后者采用实时绑定的方式，导入导出的值都指向同一个内存地址，所以导入值会跟随导出值变化。")])]),t._v(" "),n("blockquote",[n("p",[t._v("小拓展\nWebpack中有Tree-Shaking机制，但对CommonJS效果不佳，对ESM效果很好，因为ESM会进行静态分析，知道哪些代码是不要的，但是CMD不行\n在Webpack4里面对ESM效果也不佳，因为4中只是单纯判断到底有没有import进来使用，没用就干掉没被引入的文件，但是这一步lint工作就可以在开发阶段实现了。Webpack5中实现了import了一个文件中的函数，把其他没用到的代码全部不干掉。\n"),n("img",{attrs:{src:a(339),alt:""}})])]),t._v(" "),n("h2",{attrs:{id:"垃圾回收机制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收机制"}},[t._v("#")]),t._v(" 垃圾回收机制")]),t._v(" "),n("p",[t._v("在JavaScript的执行过程中，主要有三种类型内存空间，分别是"),n("strong",[t._v("代码空间")]),t._v("、"),n("strong",[t._v("栈空间")]),t._v("和"),n("strong",[t._v("堆空间")]),t._v("。其中代码空间主要是存储可执行代码的，栈空间就是调用栈，是用来存储执行上下文的。\nV8引擎执行代码时，会先进行编译，并创建执行上下文，然后按照顺序执行代码，其中原始类型的值会被保存在执行上下文中，而执行上下文又被压入栈中，所以也可以认为原始类型的值是存放在栈中的，当遇到引用类型时，V8引擎并不是直接将其存放到栈中，而是将它分配到堆空间里面，之后将分配到的地址写到栈中。\n通常情况下，栈空间都不会设置太大，主要用来存放一些原始类型的小数据，堆空间很大，能存放很多大的数据。JavaScript引擎需要用栈来维护程序执行期间上下文的状态，如果栈空间大了的话，所有的数据都存放在栈空间中，会影响到上下文切换的效率，进而又影响到整个程序的执行效率。")]),t._v(" "),n("h3",{attrs:{id:"栈空间的回收"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#栈空间的回收"}},[t._v("#")]),t._v(" 栈空间的回收")]),t._v(" "),n("p",[t._v("JavaScript执行代码时，会创建执行上下文，当执行到某个函数时，会将函数的执行上下文压入到调用栈中，与此同时，还有一个记录当前执行状态的指针（"),n("strong",[t._v("ESP")]),t._v("），当该函数执行完毕后，JavaScript会将ESP下移到下面的执行上下文中，这个下移操作就是销毁执行完函数执行上下文的过程。当一个函数执行结束之后，"),n("strong",[t._v("JavaScript 引擎会通过向下移动 ESP 来销毁该函数保存在栈中的执行上下文。")]),t._v(" "),n("img",{attrs:{src:a(340),alt:""}})]),t._v(" "),n("h3",{attrs:{id:"堆空间的回收"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#堆空间的回收"}},[t._v("#")]),t._v(" 堆空间的回收")]),t._v(" "),n("p",[n("strong",[t._v("代际假说")]),t._v("是垃圾回收领域中一个重要的术语，具有两个特点：")]),t._v(" "),n("ol",[n("li",[t._v("大部分对象在内存中存在的时间很短，简单来说，就是很多对象一经分配内存，很快就变得不可访问。")]),t._v(" "),n("li",[t._v("不死的对象，会活得更久。")])]),t._v(" "),n("p",[t._v("V8会把堆分为新生代和老生代两个区域，新生代中存放的是生存时间短的对象，老生代中存放的是生存时间久的对象。新生区通常只支持1~8M的容量，而老生区支持的容量很大。对于两块区域，V8分别使用两个不同的垃圾回收器，以便更高效地实施垃圾回收。")]),t._v(" "),n("ul",[n("li",[t._v("副垃圾回收器，主要负责新生代的垃圾回收")]),t._v(" "),n("li",[t._v("主垃圾回收器，主要负责老生代的垃圾回收")])]),t._v(" "),n("p",[t._v("不论什么类型的垃圾回收器，都有一套共同的执行流程：")]),t._v(" "),n("ol",[n("li",[t._v("标记空间中活动对象和非活动对象。")]),t._v(" "),n("li",[t._v("回收非活动对象所占据的内存。就是在所有的标记完成之后，统一清理内存中所有被标记为可回收的对象。")]),t._v(" "),n("li",[t._v("做内存整理。一般来说，频繁回收对象后，内存中就会存在大量不连续空间，这些不连续的内存空间被称为"),n("strong",[t._v("内存碎片")]),t._v("。当内存中出现大量内存碎片后，可能会在分配较大连续内存时出现内存不足的情况。这一步是可选的，因为不是所有垃圾回收器都会产生内存碎片，副垃圾回收器就不会产生。")])]),t._v(" "),n("h4",{attrs:{id:"副垃圾回收器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#副垃圾回收器"}},[t._v("#")]),t._v(" 副垃圾回收器")]),t._v(" "),n("p",[t._v("副垃圾回收器主要负责新生区的垃圾回收。通常情况下，大多数小的对象都会分配到新生区，所以垃圾回收机制比较频繁。新生代中采用的是"),n("strong",[t._v("Scavenge算法")]),t._v("，Scavenge将新生代空间对半划分为两个区域，一半是"),n("strong",[t._v("对象区域")]),t._v("，一般是"),n("strong",[t._v("空闲区域")]),t._v("，新加入的对象都会存放到对象区域中，当对象区域快被写满的时候，就需要执行一次垃圾清理操作。\n过程：首先对对象区域中的垃圾做标记；标记完成之后进入垃圾清理阶段，副垃圾回收器会把存活的对象复制到空闲区域中，同时还会把这些对象有序排列，完成了内存整理操作，复制后空闲区域没有内存碎片，完成复制之后，对象区域与空闲区域进行角色翻转。\n角色翻转的操作能让新生代中的这两块区域无限重复使用下去。\n由于复制操作需要时间成本，如果新生区空间设置得太大了，那么每次清理的时间就会过久，所以为了执行效率，一般新生区的空间会被设置得比较小。因为空间不大，所以很容易被存活对象装满整个区域，JavaScript采用"),n("strong",[t._v("对象晋升策略")]),t._v("，经过两次垃圾回收依然存活的对象，会被移动到老生区中。")]),t._v(" "),n("h4",{attrs:{id:"主垃圾回收器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#主垃圾回收器"}},[t._v("#")]),t._v(" 主垃圾回收器")]),t._v(" "),n("p",[t._v("主垃圾回收器主要负责老生区中的垃圾回收。除了新生区中晋升的对象，一些大的对象会直接被分配到老生区。因此老生区中的对象有两个特点，一个是对象占用空间大，另一个是对象存活时间长。\n主垃圾回收器采用"),n("strong",[t._v("标记-清除")]),t._v("的算法进行垃圾回收。标记阶段就是从一组根元素开始，递归遍历这组根元素，在这个遍历过程中，能到达的元素称为活动对象，没有到达的元素就可以判断为垃圾数据。由于标记清除算法会产生大量不连续的内存碎片，因此还需要"),n("strong",[t._v("标记-整理")]),t._v("算法。标记过程与标记清除过程中的标记过程相同，整理过程是让所有存活的对象都向一段移动，然后直接清理掉端边界以外的内存。")]),t._v(" "),n("h4",{attrs:{id:"全停顿"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#全停顿"}},[t._v("#")]),t._v(" 全停顿")]),t._v(" "),n("p",[t._v("由于 JavaScript 是运行在主线程之上的，一旦执行垃圾回收算法，都需要将正在执行的 JavaScript 脚本暂停下来，待垃圾回收完毕后再恢复脚本执行。我们把这种行为叫做"),n("strong",[t._v("全停顿")]),t._v("（Stop-The-World）。\n为了降低老生代的垃圾回收而造成的卡顿，V8 将标记过程分为一个个的子标记过程，同时让垃圾回收标记和 JavaScript 应用逻辑交替进行，直到标记阶段完成，我们把这个算法称为"),n("strong",[t._v("增量标记（Incremental Marking）算法")]),t._v("。实现了空闲时间做垃圾回收。\nReact的Fiber算法类似，不是局限于通过更优的算法来提升性能，而是结合浏览器现状，使用"),n("code",[t._v("requestAnimationFrame")]),t._v("和"),n("code",[t._v("requestIdleCallback")]),t._v("在浏览器空闲时碎片化分步更新内容，来达到更优的体验。")]),t._v(" "),n("h2",{attrs:{id:"线程-进程-协程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#线程-进程-协程"}},[t._v("#")]),t._v(" 线程 进程 协程")]),t._v(" "),n("p",[t._v("进程由多个线程组成，一个线程描述了执行一段指令所需的时间\n进程描述了CPU在运行指令及加载和保存上下文所需的时间")]),t._v(" "),n("p",[t._v("类比 一个浏览器的tab页就是一个进程，里面包含了js引擎线程，渲染线程，http请求线程等")]),t._v(" "),n("p",[t._v("单线程的好处：节省内存，节省上下文切换时间，没有锁的问题\n协程是比线程还小的单位，在async/await中就用到了协程，当运行到async在的await后，函数协程切换到主协程。协程还有另一个名称就是Fiber，React中的Fiber算法就是依赖协程机制。")]),t._v(" "),n("h2",{attrs:{id:"执行栈"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#执行栈"}},[t._v("#")]),t._v(" 执行栈")]),t._v(" "),n("p",[t._v("存储函数调用的栈结构 先进后出\n爆栈 -> 执行栈存放是有限制的，存放过多就会导致爆栈一般出现在递归中")]),t._v(" "),n("h2",{attrs:{id:"事件触发三个阶段"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#事件触发三个阶段"}},[t._v("#")]),t._v(" 事件触发三个阶段")]),t._v(" "),n("p",[t._v("先从window往事件触发处捕获，遇到注册的捕获事件会触发\n传播到事件触发处触发注册事件\n从事件触发处往window传播，遇到注册的冒泡事件会触发")]),t._v(" "),n("h2",{attrs:{id:"跨域"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#跨域"}},[t._v("#")]),t._v(" 跨域")]),t._v(" "),n("p",[t._v("浏览器出于安全考虑，有同源策略。端口号、域名、协议有一个不同就是跨域\najax请求就会失败\n目的：防止CSRF攻击 实际还是会发送请求，只是会被拦截，所以还是存在CSRF风险")]),t._v(" "),n("h3",{attrs:{id:"解决跨域办法："}},[n("a",{staticClass:"header-anchor",attrs:{href:"#解决跨域办法："}},[t._v("#")]),t._v(" 解决跨域办法：")]),t._v(" "),n("ul",[n("li",[t._v("JSONP 通过script标签的src传参并提供一个回调函数进行后续操作")]),t._v(" "),n("li",[t._v("CORS 设置 "),n("code",[t._v("Access-Control-Allow-Origin")])]),t._v(" "),n("li",[t._v("document.domain "),n("code",[t._v("document.domain = 'xxx.com'")]),t._v(" 但是只能用于二级域名都相同的情况")]),t._v(" "),n("li",[t._v("postMessage"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("  targetWindow.postMessage('message','http://test.com')\n\n  var mc = new MessageChannel()\n  mc.addEventListener('message', event => {\n  \tvar origin = event.origin || event.originalEvent.origin\n\tif (origin === 'http://test.com') {\n\t  console.log('验证通过')\n\t}\n  })\n")])])])])]),t._v(" "),n("h2",{attrs:{id:"存储"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#存储"}},[t._v("#")]),t._v(" 存储")]),t._v(" "),n("p",[t._v("cookie localStorage sessionStorage indexDB")]),t._v(" "),n("h2",{attrs:{id:"浏览器缓存"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存"}},[t._v("#")]),t._v(" 浏览器缓存")]),t._v(" "),n("p",[t._v("优先级\nService Worker\nMemory Cache\nDisk Cache\nPush Cache\n网络请求")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("Service Worker\n它是运行在浏览器背后的独立线程，可以用来实现缓存功能，但是传输协议必须是HTTPS，因为其中涉及到请求拦截\n实现缓存分三步，首先注册Service Worker，然后监听到install事件之后就缓存需要的文件，之后用户就会从缓存中去获取")])]),t._v(" "),n("li",[n("p",[t._v("Memory Cache\n内存中的缓存 读取高效 但是持续性很短，会随着进程释放而释放，即关闭tab就会被清除\n一般大文件大概率不会放到内存中\n当内存中使用率过高时，文件会优先存入硬盘")])]),t._v(" "),n("li",[n("p",[t._v("Disk Cache\n可以根据HTTP Header上的字段判断哪些资源可以缓存，哪些资源可以不请求直接使用，哪些资源过期需要重新请求")])]),t._v(" "),n("li",[n("p",[t._v("Push Cache\nHTTP/2中的内容 只有以上三种都未命中时才会被使用，缓存时间很短，只在Session中存在，会话结束后就被释放")])])]),t._v(" "),n("h2",{attrs:{id:"缓存策略"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#缓存策略"}},[t._v("#")]),t._v(" 缓存策略")]),t._v(" "),n("ul",[n("li",[t._v("强缓存 缓存期间不需要请求 state code为200\n"),n("ul",[n("li",[t._v("Expires HTTP/1的产物 后面加时间表示会在该时间后失效，但是受限于本地时间，如果修改本地时间可能会导致缓存失效")]),t._v(" "),n("li",[t._v("Cache-Control HTTP/1.1优先级高于Expires，可以在请求头或者响应头中设置，且有多种指令\nno-store no-cache public private max-age等")])])]),t._v(" "),n("li",[t._v("协商缓存\n如果缓存过期了需要验证资源是否更新，如果资源没有发生改变，state code为304，然后更新浏览器缓存有效期\n"),n("ul",[n("li",[t._v("Last-Modified If-Modified-Since\nIf-Modified-Since将Last-Modified发送给服务端，有弊端，Last-Modified表示文件最后修改日期，如果只是打开不更改，也会造成其被修改，且只能以秒计时，如果在无法感知的时间内完成，也会造成命中而不会更新")]),t._v(" "),n("li",[t._v("ETag If-None-Match 优先级高 If-None-Match将当前ETag发送给服务器，根据ETag是否变化来决定是否需要重新请求")])])])]),t._v(" "),n("h2",{attrs:{id:"浏览器渲染原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染原理"}},[t._v("#")]),t._v(" 浏览器渲染原理")]),t._v(" "),n("p",[t._v("JS引擎 渲染引擎\n浏览器接收字节数据转化为字符串，字符串会被标记化打上token，token会转化为node节点，然后再根据node节点转化为DOM树\nCSS渲染类似\n字节数据=》字符串=》token=》node=》CSSOM\n所以html要避免无意义的标签css要避免过于具体多层的css选择器，最好可以层级扁平")]),t._v(" "),n("p",[t._v("DOM树和CSSOM树会组合为渲染树 render tree\n然后浏览器会根据渲染树进行布局（回流） 然后调用GPU绘制")]),t._v(" "),n("p",[t._v("JS操作DOM慢是因为JS是在JS线程上 而DOM是在渲染线程上，JS操作的话会进行线程间的通信，损耗性能，且操作DOM还可能发生重绘回流")]),t._v(" "),n("h2",{attrs:{id:"阻塞渲染"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#阻塞渲染"}},[t._v("#")]),t._v(" 阻塞渲染")]),t._v(" "),n("p",[t._v("HTML和CSS会阻塞渲染，因为就是二者生成渲染树\nJS加载也会阻塞渲染\nscript上加defer属性，会让js并行下载，会在HTML解析完执行后再执行\nscript上加async属性，会让js并行下载，下载完完后就会执行")]),t._v(" "),n("h2",{attrs:{id:"重绘和回流"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#重绘和回流"}},[t._v("#")]),t._v(" 重绘和回流")]),t._v(" "),n("p",[t._v("重绘是当节点需要改变的外观不影响布局\n回流是布局或者几何属性需要改变\n回流一定发生了重绘，重绘不一定发生回流")]),t._v(" "),n("p",[t._v("重绘与回流和Event Loop有关\n减少重绘回流")]),t._v(" "),n("ul",[n("li",[t._v("transform 代替 top")]),t._v(" "),n("li",[t._v("visibility 代替 display: none")]),t._v(" "),n("li",[t._v("不把节点的属性值放在一个循环里当变量")]),t._v(" "),n("li",[t._v("不使用table布局")]),t._v(" "),n("li",[t._v("动画实现速度越快 回流次数越多")]),t._v(" "),n("li",[t._v("css选择符从右往左匹配，减少层级")]),t._v(" "),n("li",[t._v("will-change等")]),t._v(" "),n("li",[t._v("避免频繁操作样式，可汇总后统一一次修改")]),t._v(" "),n("li",[t._v("尽量使用class进行样式修改")]),t._v(" "),n("li",[t._v("减少dom操作，可使用字符串或者documentFragment一次性插入")])]),t._v(" "),n("h2",{attrs:{id:"性能优化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#性能优化"}},[t._v("#")]),t._v(" 性能优化")]),t._v(" "),n("ul",[n("li",[t._v("通过减少代码文件的大小或减少书写嵌套函数减少编译时间")]),t._v(" "),n("li",[t._v("尽量保证传入参数类型一致，方便V8优化代码")]),t._v(" "),n("li",[t._v("图片方面优化，懒加载，雪碧图，小图片用base64，图标用svg，照片JPEG等")]),t._v(" "),n("li",[t._v("DNS预解析 dns-prefetch")]),t._v(" "),n("li",[t._v("节流 throttle")]),t._v(" "),n("li",[t._v("防抖 debounce")]),t._v(" "),n("li",[t._v("预加载 preload 不会阻塞onload事件")]),t._v(" "),n("li",[t._v("预渲染 prerender")]),t._v(" "),n("li",[t._v("懒执行")]),t._v(" "),n("li",[t._v("CDN加速")])]),t._v(" "),n("h2",{attrs:{id:"计算机网络"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#计算机网络"}},[t._v("#")]),t._v(" 计算机网络")]),t._v(" "),n("ul",[n("li",[t._v("应用层 HTTP FTP")]),t._v(" "),n("li",[t._v("传输层 TCP UDP")]),t._v(" "),n("li",[t._v("网络层")]),t._v(" "),n("li",[t._v("数据链路层")]),t._v(" "),n("li",[t._v("物理层")])]),t._v(" "),n("h2",{attrs:{id:"udp-tcp"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#udp-tcp"}},[t._v("#")]),t._v(" UDP TCP")]),t._v(" "),n("ul",[n("li",[t._v("UDP\n"),n("ul",[n("li",[t._v("面向无连接")]),t._v(" "),n("li",[t._v("不可靠性")]),t._v(" "),n("li",[t._v("高效"),n("br"),t._v("\nUDP协议是面向无连接的，不需要在正式传输前建立连接，UDP只是数据报文的搬运工，不保证数据有序不丢失，UDP也没有任何控制流量的算法，所以相较TCP来说比较轻便")])])])]),t._v(" "),n("p",[t._v("发送过程也很简单 无需进行任何拆分可拼接")]),t._v(" "),n("p",[t._v("发送端应用层传递给传输层UDP协议 UDP加一个UDP头标识自己是UDP协议就继续传递给网络层\n接收端网络层传递给传输层，UDP只需要去掉UDP标识头就直接传递给应用层，不进行其他任何操作\nUDP不会备份任何数据，而且也不在乎对方是否收到数据\nUDP没有拥塞控制，会以一个恒定速度发送数据，当网络不好的时候就会造成丢包，但是对实时性要求高的场景却是优点\nUDP支持一对一、一对多、多对多、多对一的方式，支持单播，广播，多播的功能")]),t._v(" "),n("ul",[n("li",[t._v("TCP\nTCP需要先通过三次握手来建立连接，在传输过程中也通过各种算法保证数据的可靠性，所以导致并没有UDP那么高效\n标识符\nACK=1 该字段为一时表示字段有效，TCP规定连接建立后传送的所有报文段都必须把ACK置一\nSYN=1 当SYN=1 ACK=0时 表示当前报文段是一个连接请求报文。当SYN=1 ACK=1的时候，表示当前报文段是一个同意建立连接的应答报文")])]),t._v(" "),n("p",[t._v("三次握手\n第一次握手：客户端发送一个连接请求报文ACK=0 SYN=1 seq = x\n第二次握手：服务端收到连接请求报文，返回一个同意进行连接的报文ACK=1 SYN=1 ack=x+1 seq = y\n第三次握手：客户端收到同意进行连接报文，发送确认报文ACK=1 SYN=1 seq=x+1 ack=y+1\n第三次握手的原因防止出现实现的连接请求报文被服务端接收")]),t._v(" "),n("p",[t._v("四次挥手\n第一次挥手：客户端发送一个连接释放报文FIN=1 seq=u 进入FIN-WAIT-1阶段\n第二次挥手：服务端收到客户端的释放报文返回一个确认报文ACK=1 seq=v ack=u+1 进入CLOSE-WAIT阶段 这时客户端到服务端的连接关闭了，但是客户端还可以接受服务端传递的数据\n第三次挥手：服务端向客户端发送连接释放报文FIN=1 seq=w ack=u+1（和二次发送的确认报文序号一样）进入LAST-ACK阶段\n第四次挥手：客户端收到服务端的释放报文返回确认报文ACK=1 seq=u+1 ack=w+1进入TIME-WAIT阶段要等待2MSL才会彻底关掉。目的是为了确认服务端收到了确认报文，如果丢失还可以重新发送，还为了防止已实现的连接报文出现在本连接中")]),t._v(" "),n("h2",{attrs:{id:"arq协议"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#arq协议"}},[t._v("#")]),t._v(" ARQ协议")]),t._v(" "),n("p",[t._v("超时重传机制 通过确认和超时机制保证数据正确送达")]),t._v(" "),n("ul",[n("li",[t._v("停止等待ARQ\n每次发送报文都会停止继续发送，并设置一个定时器，直到收到确认报文才会取消定时器，继续发送下一段报文。如果超过定时器时间就会重新发送丢失的数据，因此每次发送都会备份发送的数据，如果对端收到错误报文也会抛弃报文等待重传；如果对端的ACK超时会丢失，此时A端也会重传报文，对端收到后会丢弃该报文然后重传应答")]),t._v(" "),n("li",[t._v("连续ARQ\n通过发送窗口，把窗口内的分组发送给服务端，服务端返回确认后会继续往后发送，接收方一般是才用累计确认，在收到几个分组后将按序到达的最后一个分组发送确认，弊端是如果中间有分组丢失，接收方只能返回前面得分组，导致发送方进行回退，重新发送一些已发送的数据。")])]),t._v(" "),n("h2",{attrs:{id:"拥塞处理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#拥塞处理"}},[t._v("#")]),t._v(" 拥塞处理")]),t._v(" "),n("ul",[n("li",[t._v("慢开始 指数级增长直到设置的慢开始门限")]),t._v(" "),n("li",[t._v("拥塞避免 线性增长使网络不容易出现拥塞")]),t._v(" "),n("li",[t._v("快速重传 如果个别报文段丢失，接收方会立即发送3次重复确认，发送方会确认丢失该报文，重新传送\n"),n("ul",[n("li",[t._v("TCP Taho 将慢开始门限设为拥塞窗口一半，将拥塞窗口设为1MSS，重新开始慢开始算法")]),t._v(" "),n("li",[t._v("TCP Reno 拥塞窗口减半，将门限设为拥塞窗口一半，进入快恢复阶段，开始拥塞避免算法")])])]),t._v(" "),n("li",[t._v("快恢复 如果只是个别报文段丢失而不是超时，会将门限值变为当前拥塞窗口的1/2，并且拥塞窗口也来到1/2开始拥塞避免算法")])]),t._v(" "),n("h2",{attrs:{id:"http请求"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http请求"}},[t._v("#")]),t._v(" HTTP请求")]),t._v(" "),n("p",[t._v("HTTP分为请求报文和响应报文，都由三部分组成")]),t._v(" "),n("ol",[n("li",[t._v("开始行（请求行/状态行）")]),t._v(" "),n("li",[t._v("首部行 用来说明浏览器服务器或报文主体的一些信息，结束后还有一行空格与实体隔开")]),t._v(" "),n("li",[t._v("实体主体")])]),t._v(" "),n("p",[t._v("get请求多用于无副作用，幂等的场景，例如搜索关键字；post多用于有副作用，不幂等的情况，例如注册\nget请求能缓存，post不能\nget请求放到url中会被浏览器保存记录，post不会，url长度有限制，post支持更多编码类型且不对数据类型限制")]),t._v(" "),n("h2",{attrs:{id:"常见状态码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常见状态码"}},[t._v("#")]),t._v(" 常见状态码")]),t._v(" "),n("ul",[n("li",[t._v("1xx表示通知信息")]),t._v(" "),n("li",[t._v("2xx表示成功")]),t._v(" "),n("li",[t._v("3xx表示重定向")]),t._v(" "),n("li",[t._v("4xx表示客户差错")]),t._v(" "),n("li",[t._v("5xx表示服务器差错")])]),t._v(" "),n("h2",{attrs:{id:"tls"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tls"}},[t._v("#")]),t._v(" TLS")]),t._v(" "),n("p",[t._v("HTTPS通过HTTP来传输信息，但是信息通过TLS协议进行加密\nTLS位于传输层之上应用层之下")]),t._v(" "),n("ul",[n("li",[t._v("对称加密 两边都拥有相同的秘钥进行加密解密，但是如果直接通过网络方式传播秘钥，被拦截后加密就失去意义")]),t._v(" "),n("li",[t._v("非对称加密 有公钥私钥之分，公钥所有人都知道，但是数据解密需要私钥，私钥只有分发公钥的人知道。公钥加密，私钥解密")])]),t._v(" "),n("p",[t._v("TLS握手\n第一次 ClientHello 客户端发放一个随机值以及需要的协议和加密方法\n第二次 ServerHello 服务端收到随机值，自己也产生一个随机值，并根据客户端需要的协议和加密方法使用对应方式，发送自己的证书\n第三次 客户端收到后验证是否有效，有效的话会生成第三个随机值通过公钥加密，然后把自己的证书还有随机值发送给服务端，服务端收到之后通过私钥解密随机值，至此，两端将三个随机值组合成秘钥开始进行对称加密")]),t._v(" "),n("h2",{attrs:{id:"http-2-http-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http-2-http-3"}},[t._v("#")]),t._v(" HTTP/2 HTTP/3")]),t._v(" "),n("p",[t._v("HTTP/1 无法复用链接，完成即断开，重新慢启动和TCP3次握手\nHTTP/1.1 长连接（keep-alive）复用，host字段指定对应的虚拟站点")]),t._v(" "),n("ul",[n("li",[t._v("断点续存")]),t._v(" "),n("li",[t._v("身份认证")]),t._v(" "),n("li",[t._v("状态管理")]),t._v(" "),n("li",[t._v("cache缓存\n"),n("ul",[n("li",[t._v("Cache-Control")]),t._v(" "),n("li",[t._v("Expires")]),t._v(" "),n("li",[t._v("Last-Modified")]),t._v(" "),n("li",[t._v("ETag")])])])]),t._v(" "),n("p",[t._v("HTTP/2使用多路复用\nHTTP/1 中同一个域名下请求数量是有限制的，当请求很多资源时，队头阻塞会导致到达最大请求数量时，剩余资源需要等待其他资源请求完才可以再请求\nHTTP/2 使用了多路复用，通过一个TCP连接可以传输所有的请求数据\nHTTP/2中有帧（frame）和流（stream）帧代表最小的数据单位，每个帧都会标识出该帧属于哪个流，流由多个帧组成。多路复用就是在一个TCP连接中可以存在多个流，对端通过帧中的标识确定属于哪个请求，这样就可以避免之前HTTP版本中的队头堵塞，提高传输性能。")]),t._v(" "),n("p",[t._v("HTTP/2使用二进制传输\n在之前的HTTP版本中都是通过文本的方式传输数据，在HTTP/2中引入新的编码机制，所有传输的数据被分割，采用二进制格式编码")]),t._v(" "),n("p",[t._v("HTTP/2使用Header压缩\n在HTTP/1中 使用文本的形式传输Header，如果header中存在cookie的情况下，可能每次都需要重复传输很多字节\n在HTTP/2中 使用了HPACK压缩格式对header进行编码，减少了header大小。而且在两端维护了索引表，会记录已出现的header，这样出现过的header、就可以通过传键名，在对端根据键名进行获取")]),t._v(" "),n("p",[t._v("HTTP/2使用服务端Push\n在HTTP/2中，服务端可以根据客户端某个请求后，主动推送其他资源，减少一点延迟时间，当然浏览器兼容的情况下也可以使用prefetch")]),t._v(" "),n("p",[t._v("HTTP/3\nHTTP/2由于TCP协议的关系，在实现多路复用的情况下，如果出现丢包，性能的消耗反而会比HTTP/1还大，因为多路复用只有一个TCP连接。所以HTTP/3使用了新的协议QUIC")]),t._v(" "),n("p",[t._v("QUIC基于UDP，又取了TCP中的精华，实现既快又可靠的协议")]),t._v(" "),n("ul",[n("li",[t._v("多路复用：不同于HTTP/2在一个TCP连接中的多路复用，QUIC本身就支持多路复用，并且传输的单个数据流可以保证有序交付且不会影响其他数据流，解决了TCP中的问题。而且TCP是基于IP和端口去识别连接的，但是QUIC是基于ID的方式去识别，只要ID不变，就能迅速重连")]),t._v(" "),n("li",[t._v("0-RTT 通过使用类似TCP快速打开技术，缓存当前会话上下文，在下次恢复会话时，将上下文传递给服务端验证通过就可以进行传输了")]),t._v(" "),n("li",[t._v("纠错机制 假如要发三个包，那么协议会根据三个包异或值单独发一个校验包，如果三个包有一个丢失，可以根据校验包计算出丢失包的内容，但是如果多个包丢失就无法使用纠错机制了，只能使用重传")])]),t._v(" "),n("h2",{attrs:{id:"输入url到页面渲染的整个流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#输入url到页面渲染的整个流程"}},[t._v("#")]),t._v(" 输入URL到页面渲染的整个流程")]),t._v(" "),n("p",[t._v("DNS解析 DNS基于UDP协议对域名进行解析，获取到IP，之后跳转到IP\n之后客户端会和服务端建立连接 TCP三次握手\n建立TCP连接后会进行TLS握手\n完成后进行HTTP请求 服务端响应请求返回HTML文件\nHTML渲染，HTML获取的时候是二进制码，先转化为字符串，之后标记化，然后组成node，最后变成DOM树 ，CSS同理，如果有不属于async或defer的js会先阻塞DOM和CSSOM过程，先执行js，加载外部资源等操作，js执行完后会继续生成DOM树和CSSOM树，最终两个树会生成渲染树，此时浏览器就开始调用GUI进行绘制")]),t._v(" "),n("h2",{attrs:{id:"doctype作用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#doctype作用"}},[t._v("#")]),t._v(" doctype作用")]),t._v(" "),n("p",[t._v("DOCTYPE声明位于文档最前面，处于标签之前，作用是告诉浏览器的解析器，要用什么文档类型规范来解析，同时也用来区分严格模式与混杂模式")]),t._v(" "),n("h2",{attrs:{id:"标签语义化的作用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#标签语义化的作用"}},[t._v("#")]),t._v(" 标签语义化的作用")]),t._v(" "),n("ol",[n("li",[t._v("HTML机构清晰")]),t._v(" "),n("li",[t._v("代码可读性好")]),t._v(" "),n("li",[t._v("无障碍阅读")]),t._v(" "),n("li",[t._v("搜索引擎可以根据标签的语言确定上下文和权重")]),t._v(" "),n("li",[t._v("移动设备更完美展现页面")]),t._v(" "),n("li",[t._v("便于团队开发和维护")])]),t._v(" "),n("h2",{attrs:{id:"css选择器优先级"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#css选择器优先级"}},[t._v("#")]),t._v(" CSS选择器优先级")]),t._v(" "),n("p",[t._v("内联 > id选择器 > 类选择器，属性选择器，伪类选择器 > 标签选择器，伪元素选择器")]),t._v(" "),n("h2",{attrs:{id:"浏览器同源策略"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#浏览器同源策略"}},[t._v("#")]),t._v(" 浏览器同源策略")]),t._v(" "),n("p",[t._v("同源策略是一个重要的安全策略，它用于限制一个源的文档或者它加载的脚本如何能与另一个源进行交互。它可以帮助阻隔恶意文档，减少被攻击的媒介。\n跨域\nJSONP\ndocument.domain\nCORS -》 Access-Control-Allow-Orign")]),t._v(" "),n("h2",{attrs:{id:"flex"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#flex"}},[t._v("#")]),t._v(" flex")]),t._v(" "),n("p",[t._v("flex-direction 主轴方向 row column\nflex-wrap 是否换行\nflex-flow flex-direction和flex-wrap的组合属性\njustify-content 主轴方向上的对齐方式 center space-between等\nalign-items 交叉轴的对齐方式 center baseline等 默认stretch是沾满容器高度\nalign-content 多根轴线的定义方式（设置了wrap且分行后才会生效）\norder项目的顺序 数值越小越靠前 默认为0\nflex-grow 项目放大的比例 默认为0 即空间即使变大项目也不变\nflex-shrink 项目缩小比例 默认为1 即空间缩小的话项目将缩小\nflex-basis 定义项目在分配多余空间之前占据主轴的空间，默认是auto即项目本来的大小\nflex 是flex-grow flex-shrink flex-basis缩写\nflex: auto => flex: 1 1 auto\nflex: none => flex: 0 0 auto")]),t._v(" "),n("h2",{attrs:{id:"git"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[t._v("#")]),t._v(" git")]),t._v(" "),n("p",[t._v("git merge --abort 放弃merge 使Git仓库回到merge前的状态\ngit rebase\ngit commit --amend修正上一次commit 将修改后的内容和当前commit里的内容合并起来成为一个新的commit然后替换掉\n修改倒数第二个\ngit rebase -i 目标comit\n然后在编辑页面指定需要修改的commit改为edit\n之后使用git commit --amend\n最后git rebase continue\n~x表示后移x位commit\n^数量表示前移多少位")]),t._v(" "),n("p",[t._v("撤销提交git reset --hard 目标commit\n另一种撤销提交git revert 这个是提交了一次反转上个commit的commit")]),t._v(" "),n("p",[t._v("git stash\ngit stash pop")]),t._v(" "),n("h1",{attrs:{id:"css"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#css"}},[t._v("#")]),t._v(" CSS")]),t._v(" "),n("h2",{attrs:{id:"盒模型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#盒模型"}},[t._v("#")]),t._v(" 盒模型")]),t._v(" "),n("ul",[n("li",[t._v("content-box(W3C标准盒模型)")]),t._v(" "),n("li",[t._v("border-box(IE盒模型)")]),t._v(" "),n("li",[t._v("padding-box")]),t._v(" "),n("li",[t._v("margin-box(浏览器未实现)")])]),t._v(" "),n("h2",{attrs:{id:"bfc（块级格式化上下文）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bfc（块级格式化上下文）"}},[t._v("#")]),t._v(" BFC（块级格式化上下文）")]),t._v(" "),n("p",[t._v("IE可通过zoom: 1触发\n触发条件：")]),t._v(" "),n("ol",[n("li",[t._v("根元素")]),t._v(" "),n("li",[t._v("float不为none")]),t._v(" "),n("li",[t._v("overflow不为visible")]),t._v(" "),n("li",[t._v("display: inline-block, table")]),t._v(" "),n("li",[t._v("position: absolute/fixed")])]),t._v(" "),n("h2",{attrs:{id:"层叠上下文"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#层叠上下文"}},[t._v("#")]),t._v(" 层叠上下文")]),t._v(" "),n("p",[t._v("触发条件：")]),t._v(" "),n("ol",[n("li",[t._v("根层叠上下文HTML")]),t._v(" "),n("li",[t._v("position")]),t._v(" "),n("li",[t._v("css3属性\n"),n("ul",[n("li",[t._v("flex")]),t._v(" "),n("li",[t._v("transform")]),t._v(" "),n("li",[t._v("opacity")]),t._v(" "),n("li",[t._v("filter")]),t._v(" "),n("li",[t._v("will-change\n同一层叠上下文在z轴上排序"),n("br"),t._v("\nz-index为正值 > z-index: 0/auto > 行内元素 > 浮动元素 > 块级元素 > z-index为负值 > background/boarder")])])])]),t._v(" "),n("h2",{attrs:{id:"css动画"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#css动画"}},[t._v("#")]),t._v(" CSS动画")]),t._v(" "),n("ul",[n("li",[t._v("transition: 过渡动画\n"),n("ul",[n("li",[t._v("transition-property: 属性")]),t._v(" "),n("li",[t._v("transition-duration: 间隔")]),t._v(" "),n("li",[t._v("transition-timing-function: 区线")]),t._v(" "),n("li",[t._v("transition-delay: 延迟")]),t._v(" "),n("li",[t._v("常用钩子：transitionend")])])]),t._v(" "),n("li",[t._v("animation / keyframes\n"),n("ul",[n("li",[t._v("animation-name: 动画名称，对应 @keyframes")]),t._v(" "),n("li",[t._v("animation-duration: 间隔")]),t._v(" "),n("li",[t._v("animation-timing-function: 区线")]),t._v(" "),n("li",[t._v("animation-delay: 延迟")]),t._v(" "),n("li",[t._v("animation-iteration-count: 次数\n"),n("ul",[n("li",[t._v("infinite: 循环动画")])])]),t._v(" "),n("li",[t._v("animation-direction: 方向\n"),n("ul",[n("li",[t._v("alternate: 反向播放")])])]),t._v(" "),n("li",[t._v("animation-fill-mode: 静止模式\n"),n("ul",[n("li",[t._v("forwards: 停止时，保留最后一帧")]),t._v(" "),n("li",[t._v("backwards: 停止时，回到第一帧")]),t._v(" "),n("li",[t._v("both: 同时运用上两者")])])]),t._v(" "),n("li",[t._v("常用钩子: animationend")])])]),t._v(" "),n("li",[t._v("动画属性\n"),n("ul",[n("li",[t._v("translate 平移")]),t._v(" "),n("li",[t._v("scale 缩放")]),t._v(" "),n("li",[t._v("rotate 旋转")]),t._v(" "),n("li",[t._v("skew 二维平面上的倾斜转换")]),t._v(" "),n("li",[t._v("opacity")]),t._v(" "),n("li",[t._v("color")])])])]),t._v(" "),n("h1",{attrs:{id:"javascript"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javascript"}},[t._v("#")]),t._v(" JavaScript")]),t._v(" "),n("h2",{attrs:{id:"执行上下文ec"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#执行上下文ec"}},[t._v("#")]),t._v(" 执行上下文EC")]),t._v(" "),n("p",[t._v("包含三个部分")]),t._v(" "),n("ul",[n("li",[t._v("变量对象VO：可以抽象为一种"),n("strong",[t._v("数据作用域")]),t._v("，它存储着该执行上下文中所有的"),n("strong",[t._v("变量和函数声明（不包含函数表达式）")]),t._v("，当它处于 active EC 中时，被称为活动对象AO")]),t._v(" "),n("li",[t._v("作用域链（词法作用域）：可以理解为一组对象列表，包含父级和自身变量对象，因此才可以访问的父级里声明的变量或函数。由两部分组成\n"),n("ul",[n("li",[n("code",[t._v("[[scope]]")]),t._v("：指向父级的变量对象和作用域链，即包含父级的"),n("code",[t._v("[[scope]]")]),t._v("和AO")]),t._v(" "),n("li",[t._v("AO：自身活动对象")])])]),t._v(" "),n("li",[t._v("this指向")])]),t._v(" "),n("p",[t._v("类型")]),t._v(" "),n("ul",[n("li",[t._v("全局执行上下文")]),t._v(" "),n("li",[t._v("函数执行上下文")]),t._v(" "),n("li",[t._v("eval执行上下文")])]),t._v(" "),n("p",[t._v("代码执行过程")]),t._v(" "),n("ul",[n("li",[t._v("创建全局上下文global EC")]),t._v(" "),n("li",[t._v("全局执行上逐行自上而下执行。遇到函数时，函数执行上下文被push到执行栈顶层")]),t._v(" "),n("li",[t._v("函数执行上下文被激活，成为active EC，开始执行函数中代码，全局执行上下文被挂起")]),t._v(" "),n("li",[t._v("函数执行完之后，被pop移出执行栈，全局执行上下文继续执行")])]),t._v(" "),n("h2",{attrs:{id:"闭包-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#闭包-2"}},[t._v("#")]),t._v(" 闭包")]),t._v(" "),n("p",[t._v("闭包属于特殊的作用域，静态作用域。在父级被销毁后，返回的子函数"),n("code",[t._v("[[scope]]")]),t._v("中仍然保留着父级的变量对象和作用域链，因此可以继续访问到父级的变量对象。")]),t._v(" "),n("h2",{attrs:{id:"babel编译原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#babel编译原理"}},[t._v("#")]),t._v(" babel编译原理")]),t._v(" "),n("ul",[n("li",[t._v("首先babylon将高级的代码解析为AST")]),t._v(" "),n("li",[t._v("babel-traverse对AST进行遍历转译，得到新的AST")]),t._v(" "),n("li",[t._v("babel-generator将新的AST转化为ES5代码")])]),t._v(" "),n("h2",{attrs:{id:"跨标签页通讯"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#跨标签页通讯"}},[t._v("#")]),t._v(" 跨标签页通讯")]),t._v(" "),n("p",[t._v("不同标签页间的通讯，原理是运用一些可共享的中间介质")]),t._v(" "),n("ul",[n("li",[t._v("通过父页面window.open 和 子页面的postMessage\n"),n("ul",[n("li",[t._v("目标targetWindow.postMessage(message, Origin)")]),t._v(" "),n("li",[t._v("接收信息的窗口addEventListener('message', cb)")])])]),t._v(" "),n("li",[t._v("设置同域下共享的localStorage和onstorage\n"),n("ul",[n("li",[t._v("重复写入相同值无法触发")]),t._v(" "),n("li",[t._v("会受到浏览器隐身模式等的限制")]),t._v(" "),n("li",[t._v("onstorage只有其他同源窗口会触发，当前窗口不会触发")])])]),t._v(" "),n("li",[t._v("设置共享cookie与不断轮询脏检查")]),t._v(" "),n("li",[t._v("借助服务端或者中间层实现")])]),t._v(" "),n("h2",{attrs:{id:"浏览器架构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#浏览器架构"}},[t._v("#")]),t._v(" 浏览器架构")]),t._v(" "),n("ul",[n("li",[t._v("用户界面")]),t._v(" "),n("li",[t._v("主进程")]),t._v(" "),n("li",[t._v("内核\n"),n("ul",[n("li",[t._v("渲染引擎")]),t._v(" "),n("li",[t._v("JS引擎\n"),n("ul",[n("li",[t._v("执行栈")])])]),t._v(" "),n("li",[t._v("事件触发线程\n"),n("ul",[n("li",[t._v("消息队列\n"),n("ul",[n("li",[t._v("宏任务")]),t._v(" "),n("li",[t._v("微任务")])])])])]),t._v(" "),n("li",[t._v("网络异步线程")]),t._v(" "),n("li",[t._v("定时器线程")])])])]),t._v(" "),n("h2",{attrs:{id:"web-worker"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#web-worker"}},[t._v("#")]),t._v(" Web Worker")]),t._v(" "),n("p",[t._v("现代浏览器为JavaScript创造的多线程环境。可以新建并将部分任务分配到worker线程并行运行，两个线程可独立运行，互不干扰，可以通过自带的信息机制相互通信。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("const worker = new Worker('work.js') //参数必须是网络获取的脚本文件，不能是本地资源\nworker.postMessage('message from 主线程') //主线程向worker传递信息\nworker.terminate() //主线程关闭worker\n//worker中\nself.postMessage('message from worker') //worker向主线程传递信息，self是worker中的全局对象\nself.close() //worker线程关闭自己\n")])])]),n("p",[t._v("限制:")]),t._v(" "),n("ul",[n("li",[t._v("同源限制")]),t._v(" "),n("li",[t._v("无法使用document/window/alert/confirm")]),t._v(" "),n("li",[t._v("无法加载本地资源")])]),t._v(" "),n("h2",{attrs:{id:"websocket"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#websocket"}},[t._v("#")]),t._v(" WebSocket")]),t._v(" "),n("p",[t._v("WebSocket是一个持久化的协议，基于HTTP，目的是使服务端可以主动push")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("//客户端\nconst ws = new WebSocket('ws://localhost:8080') //使用的协议标识符是ws是在TCP协议之上的，如果加密则是wss（中间多一层TLS）\nws.addEventListener('open', function(event){\n\tws.send('Hello Server')\n})\nws.addEventListener('message', function(event){\n\tconsole.log(event.data)\n})\n//node服务端\nconst WebSocketServer = require('ws').Server\nconst wsServer = new WebSocketServer({port: 8080})\nwsServer.on('connection', (socket)=>{\n\tsocket.on('message', message=>{\n\t\tconsole.log('接收到客户端消息:'+message)\n\t\tsocket.send('服务器回应:'+ someData)\n\t})\n})\n")])])]),n("p",[t._v("使用websocket协议没有跨域问题，但是可以通过设置Origin进行限制，同时请求头会有新的header")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("Upgrade: websocket //表示升级为websocket协议\nConnection: Upgrade //表示使用升级协议\nSec-WebSocket-Version //表示websocket协议版本\nSec-WebSocket-Key //浏览器随机生成与服务端的Accept相互匹配\n")])])]),n("p",[t._v("响应头也有新的header")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("Connection: Upgrade\nSec-WebSocket-Accept: \nUpgrade: websocket\n")])])]),n("p",[t._v("且状态码为101 表示切换协议\nSec-WebSocket-Key和Sec-WebSocket-Accept作用")]),t._v(" "),n("ul",[n("li",[t._v("避免服务端收到非法的websocket连接")]),t._v(" "),n("li",[t._v("确保服务端理解websocket连接")]),t._v(" "),n("li",[t._v("用浏览器里发起ajax请求，设置header时，Sec-WebSocket-Key以及其他相关的header是被禁止的")])]),t._v(" "),n("p",[t._v("Sec-WebSocket-Accept的获得")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("const crypto = require('crypto')\nconst number = '258EAFA5-E914-47DA-95CA-C5AB0DC85B11'\nconst webSocketKey = 'IHfMdf8a0aQXbwQO1pkGdA=='\nlet webSocketAccept = crypto.createHash('sha1').update(webSocketKey+number).digest('base64')\nconsole.log(websocketAccept);//aWAY+V/uyz5ILZEoWuWdxjnlb7E=\n")])])]),n("h1",{attrs:{id:"算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[t._v("#")]),t._v(" 算法")]),t._v(" "),n("p",[t._v("五大算法")]),t._v(" "),n("ul",[n("li",[t._v("贪心算法")]),t._v(" "),n("li",[t._v("分治算法")]),t._v(" "),n("li",[t._v("动态规划")]),t._v(" "),n("li",[t._v("回溯法")]),t._v(" "),n("li",[t._v("分支限界法")])])])}),[],!1,null,null,null);s.default=e.exports}}]);