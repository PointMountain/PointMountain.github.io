(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{341:function(v,_,a){"use strict";a.r(_);var t=a(33),i=Object(t.a)({},(function(){var v=this,_=v.$createElement,a=v._self._c||_;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("h1",{attrs:{id:"css"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css"}},[v._v("#")]),v._v(" CSS")]),v._v(" "),a("h2",{attrs:{id:"盒模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#盒模型"}},[v._v("#")]),v._v(" 盒模型")]),v._v(" "),a("ul",[a("li",[v._v("content-box(W3C标准盒模型)")]),v._v(" "),a("li",[v._v("border-box(IE盒模型)")]),v._v(" "),a("li",[v._v("padding-box")]),v._v(" "),a("li",[v._v("margin-box(浏览器未实现)")])]),v._v(" "),a("h2",{attrs:{id:"bfc（块级格式化上下文）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bfc（块级格式化上下文）"}},[v._v("#")]),v._v(" BFC（块级格式化上下文）")]),v._v(" "),a("p",[v._v("IE可通过zoom: 1触发\n触发条件：")]),v._v(" "),a("ol",[a("li",[v._v("根元素")]),v._v(" "),a("li",[v._v("float不为none")]),v._v(" "),a("li",[v._v("overflow不为visible")]),v._v(" "),a("li",[v._v("display: inline-block, table")]),v._v(" "),a("li",[v._v("position: absolute/fixed")])]),v._v(" "),a("h2",{attrs:{id:"层叠上下文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#层叠上下文"}},[v._v("#")]),v._v(" 层叠上下文")]),v._v(" "),a("p",[v._v("触发条件：")]),v._v(" "),a("ol",[a("li",[v._v("根层叠上下文HTML")]),v._v(" "),a("li",[v._v("position")]),v._v(" "),a("li",[v._v("css3属性\n"),a("ul",[a("li",[v._v("flex")]),v._v(" "),a("li",[v._v("transform")]),v._v(" "),a("li",[v._v("opacity")]),v._v(" "),a("li",[v._v("filter")]),v._v(" "),a("li",[v._v("will-change\n同一层叠上下文在z轴上排序"),a("br"),v._v("\nz-index为正值 > z-index: 0/auto > 行内元素 > 浮动元素 > 块级元素 > z-index为负值 > background/boarder")])])])]),v._v(" "),a("h2",{attrs:{id:"css动画"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css动画"}},[v._v("#")]),v._v(" CSS动画")]),v._v(" "),a("ul",[a("li",[v._v("transition: 过渡动画\n"),a("ul",[a("li",[v._v("transition-property: 属性")]),v._v(" "),a("li",[v._v("transition-duration: 间隔")]),v._v(" "),a("li",[v._v("transition-timing-function: 区线")]),v._v(" "),a("li",[v._v("transition-delay: 延迟")]),v._v(" "),a("li",[v._v("常用钩子：transitionend")])])]),v._v(" "),a("li",[v._v("animation / keyframes\n"),a("ul",[a("li",[v._v("animation-name: 动画名称，对应 @keyframes")]),v._v(" "),a("li",[v._v("animation-duration: 间隔")]),v._v(" "),a("li",[v._v("animation-timing-function: 区线")]),v._v(" "),a("li",[v._v("animation-delay: 延迟")]),v._v(" "),a("li",[v._v("animation-iteration-count: 次数\n"),a("ul",[a("li",[v._v("infinite: 循环动画")])])]),v._v(" "),a("li",[v._v("animation-direction: 方向\n"),a("ul",[a("li",[v._v("alternate: 反向播放")])])]),v._v(" "),a("li",[v._v("animation-fill-mode: 静止模式\n"),a("ul",[a("li",[v._v("forwards: 停止时，保留最后一帧")]),v._v(" "),a("li",[v._v("backwards: 停止时，回到第一帧")]),v._v(" "),a("li",[v._v("both: 同时运用上两者")])])]),v._v(" "),a("li",[v._v("常用钩子: animationend")])])]),v._v(" "),a("li",[v._v("动画属性\n"),a("ul",[a("li",[v._v("translate 平移")]),v._v(" "),a("li",[v._v("scale 缩放")]),v._v(" "),a("li",[v._v("rotate 旋转")]),v._v(" "),a("li",[v._v("skew 二维平面上的倾斜转换")]),v._v(" "),a("li",[v._v("opacity")]),v._v(" "),a("li",[v._v("color")])])])]),v._v(" "),a("h1",{attrs:{id:"javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript"}},[v._v("#")]),v._v(" JavaScript")]),v._v(" "),a("h2",{attrs:{id:"执行上下文ec"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行上下文ec"}},[v._v("#")]),v._v(" 执行上下文EC")]),v._v(" "),a("p",[v._v("包含三个部分")]),v._v(" "),a("ul",[a("li",[v._v("变量对象VO：可以抽象为一种"),a("strong",[v._v("数据作用域")]),v._v("，它存储着该执行上下文中所有的"),a("strong",[v._v("变量和函数声明（不包含函数表达式）")]),v._v("，当它处于 active EC 中时，被称为活动对象AO")]),v._v(" "),a("li",[v._v("作用域链（词法作用域）：可以理解为一组对象列表，包含父级和自身变量对象，因此才可以访问的父级里声明的变量或函数。由两部分组成\n"),a("ul",[a("li",[a("code",[v._v("[[scope]]")]),v._v("：指向父级的变量对象和作用域链，即包含父级的"),a("code",[v._v("[[scope]]")]),v._v("和AO")]),v._v(" "),a("li",[v._v("AO：自身活动对象")])])]),v._v(" "),a("li",[v._v("this指向")])]),v._v(" "),a("p",[v._v("类型")]),v._v(" "),a("ul",[a("li",[v._v("全局执行上下文")]),v._v(" "),a("li",[v._v("函数执行上下文")]),v._v(" "),a("li",[v._v("eval执行上下文")])]),v._v(" "),a("p",[v._v("代码执行过程")]),v._v(" "),a("ul",[a("li",[v._v("创建全局上下文global EC")]),v._v(" "),a("li",[v._v("全局执行上逐行自上而下执行。遇到函数时，函数执行上下文被push到执行栈顶层")]),v._v(" "),a("li",[v._v("函数执行上下文被激活，成为active EC，开始执行函数中代码，全局执行上下文被挂起")]),v._v(" "),a("li",[v._v("函数执行完之后，被pop移出执行栈，全局执行上下文继续执行")])]),v._v(" "),a("h2",{attrs:{id:"闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[v._v("#")]),v._v(" 闭包")]),v._v(" "),a("p",[v._v("闭包属于特殊的作用域，静态作用域。在父级被销毁后，返回的子函数"),a("code",[v._v("[[scope]]")]),v._v("中仍然保留着父级的变量对象和作用域链，因此可以继续访问到父级的变量对象。")]),v._v(" "),a("h2",{attrs:{id:"babel编译原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel编译原理"}},[v._v("#")]),v._v(" babel编译原理")]),v._v(" "),a("ul",[a("li",[v._v("首先babylon将高级的代码解析为AST")]),v._v(" "),a("li",[v._v("babel-traverse对AST进行遍历转译，得到新的AST")]),v._v(" "),a("li",[v._v("babel-generator将新的AST转化为ES5代码")])]),v._v(" "),a("h2",{attrs:{id:"跨标签页通讯"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跨标签页通讯"}},[v._v("#")]),v._v(" 跨标签页通讯")]),v._v(" "),a("p",[v._v("不同标签页间的通讯，原理是运用一些可共享的中间介质")]),v._v(" "),a("ul",[a("li",[v._v("通过父页面window.open 和 子页面的postMessage\n"),a("ul",[a("li",[v._v("目标targetWindow.postMessage(message, Origin)")]),v._v(" "),a("li",[v._v("接收信息的窗口addEventListener('message', cb)")])])]),v._v(" "),a("li",[v._v("设置同域下共享的localStorage和onstorage\n"),a("ul",[a("li",[v._v("重复写入相同值无法触发")]),v._v(" "),a("li",[v._v("会受到浏览器隐身模式等的限制")]),v._v(" "),a("li",[v._v("onstorage只有其他同源窗口会触发，当前窗口不会触发")])])]),v._v(" "),a("li",[v._v("设置共享cookie与不断轮询脏检查")]),v._v(" "),a("li",[v._v("借助服务端或者中间层实现")])]),v._v(" "),a("h2",{attrs:{id:"浏览器架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器架构"}},[v._v("#")]),v._v(" 浏览器架构")]),v._v(" "),a("ul",[a("li",[v._v("用户界面")]),v._v(" "),a("li",[v._v("主进程")]),v._v(" "),a("li",[v._v("内核\n"),a("ul",[a("li",[v._v("渲染引擎")]),v._v(" "),a("li",[v._v("JS引擎\n"),a("ul",[a("li",[v._v("执行栈")])])]),v._v(" "),a("li",[v._v("事件触发线程\n"),a("ul",[a("li",[v._v("消息队列\n"),a("ul",[a("li",[v._v("宏任务")]),v._v(" "),a("li",[v._v("微任务")])])])])]),v._v(" "),a("li",[v._v("网络异步线程")]),v._v(" "),a("li",[v._v("定时器线程")])])])]),v._v(" "),a("h2",{attrs:{id:"web-worker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web-worker"}},[v._v("#")]),v._v(" Web Worker")]),v._v(" "),a("p",[v._v("现代浏览器为JavaScript创造的多线程环境。可以新建并将部分任务分配到worker线程并行运行，两个线程可独立运行，互不干扰，可以通过自带的信息机制相互通信。")]),v._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("const worker = new Worker('work.js') //参数必须是网络获取的脚本文件，不能是本地资源\nworker.postMessage('message from 主线程') //主线程向worker传递信息\nworker.terminate() //主线程关闭worker\n//worker中\nself.postMessage('message from worker') //worker向主线程传递信息，self是worker中的全局对象\nself.close() //worker线程关闭自己\n")])])]),a("p",[v._v("限制:")]),v._v(" "),a("ul",[a("li",[v._v("同源限制")]),v._v(" "),a("li",[v._v("无法使用document/window/alert/confirm")]),v._v(" "),a("li",[v._v("无法加载本地资源")])]),v._v(" "),a("h2",{attrs:{id:"websocket"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#websocket"}},[v._v("#")]),v._v(" WebSocket")]),v._v(" "),a("p",[v._v("WebSocket是一个持久化的协议，基于HTTP，目的是使服务端可以主动push")]),v._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("const ws = new WebSocket('ws://localhost:8080') //使用的协议标识符是ws是在TCP协议之上的，如果加密则是wss（中间多一层TLS）\nws.addEventListener('open', function(event){\n\tws.send('Hello Server')\n})\nws.addEventListener('message', function(event){\n\tconsole.log(event.data)\n})\n")])])]),a("h1",{attrs:{id:"算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[v._v("#")]),v._v(" 算法")]),v._v(" "),a("p",[v._v("五大算法")]),v._v(" "),a("ul",[a("li",[v._v("贪心算法")]),v._v(" "),a("li",[v._v("分治算法")]),v._v(" "),a("li",[v._v("动态规划")]),v._v(" "),a("li",[v._v("回溯法")]),v._v(" "),a("li",[v._v("分支限界法")])])])}),[],!1,null,null,null);_.default=i.exports}}]);